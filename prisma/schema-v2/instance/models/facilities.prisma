model Building {
    id          String     @id @default(uuid()) @db.Uuid
    // publicId    String     @unique
    name        String     
    description String?    
    facilities  Facility[]
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt

    @@index([name])
}

model Facility {
    id          String              @id @default(uuid()) @db.Uuid
    // publicId    String              @unique
    buildingId  String              @db.Uuid
    building    Building            @relation(fields: [buildingId], references: [id], onDelete: Cascade)
    name        String              @unique
    description String?             
    type        String             
    ward        FacilityWard?
    clinic      FacilityClinic?
    laboratory  FacilityLaboratory?
    pharmacy    FacilityPharmacy?
    encounters  PatientEncounterAdmission[]
    createdAt   DateTime            @default(now())
    updatedAt   DateTime            @updatedAt

    @@index([name])
}

model FacilityWard {
    id         String                      @id @default(uuid()) @db.Uuid
    // publicId   String                      @unique
    facilityId String                      @unique @db.Uuid
    facility   Facility                    @relation(fields: [facilityId], references: [id], onDelete: Cascade)
    identifier String                      @unique @db.VarChar(100)
    capacity   Int?
    status     String                      @db.VarChar(10) // available, occupied, preparing, other
    createdAt  DateTime                    @default(now())
    updatedAt  DateTime                    @updatedAt

    @@index([identifier])
}

model FacilityClinic {
    id         String                      @id @default(uuid()) @db.Uuid
    // publicId   String                      @unique
    facilityId String                      @unique @db.Uuid
    facility   Facility                    @relation(fields: [facilityId], references: [id], onDelete: Cascade)
    name       String                      @db.VarChar(100)
    schedules  FacilityClinicSchedule[]
    createdAt  DateTime                    @default(now())
    updatedAt  DateTime                    @updatedAt

    @@index([name])
}

model FacilityClinicSchedule {
    id          String         @id @default(uuid()) @db.Uuid
    // publicId    String         @unique
    clinicId    String         @unique @db.Uuid
    clinic      FacilityClinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)
    doctorId    String         @db.Uuid
    secretaryId String?        @db.Uuid
    day         String         @db.VarChar(10) // monday, tuesday, wednesday, thursday, friday, saturday, sunday
    startTime   String         @db.VarChar(5) // HH:MM
    endTime     String         @db.VarChar(5) // HH:MM
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @updatedAt

    @@index([clinicId])
}

model FacilityLaboratory {
    id          String                       @id @default(uuid()) @db.Uuid
    // publicId    String                       @unique
    facilityId  String                       @unique @db.Uuid
    facility    Facility                     @relation(fields: [facilityId], references: [id], onDelete: Cascade)
    name        String                       @db.VarChar(100)
    description String?                      @db.VarChar(255)
    schedules   FacilityLaboratorySchedule[]
    createdAt   DateTime                     @default(now())
    updatedAt   DateTime                     @updatedAt

    @@index([name])
}

model FacilityLaboratorySchedule {
    id           String             @id @default(uuid()) @db.Uuid
    // publicId     String             @unique
    laboratoryId String             @unique @db.Uuid
    laboratory   FacilityLaboratory @relation(fields: [laboratoryId], references: [id], onDelete: Cascade)
    staffId      String             @db.Uuid
    day          String             @db.VarChar(10) // monday, tuesday, wednesday, thursday, friday, saturday, sunday
    startTime    String             @db.VarChar(5) // HH:MM
    endTime      String             @db.VarChar(5) // HH:MM
    createdAt    DateTime           @default(now())
    updatedAt    DateTime           @updatedAt

    @@index([laboratoryId])
}

model FacilityPharmacy {
    id         String                     @id @default(uuid()) @db.Uuid
    // publicId   String                     @unique
    facilityId String                     @unique @db.Uuid
    facility   Facility                   @relation(fields: [facilityId], references: [id], onDelete: Cascade)
    identifier String                     @unique
    schedules  FacilityPharmacySchedule[]
    createdAt  DateTime                   @default(now())
    updatedAt  DateTime                   @updatedAt
}

model FacilityPharmacySchedule {
    id         String           @id @default(uuid()) @db.Uuid
    // publicId   String           @unique
    pharmacyId String           @unique @db.Uuid
    pharmacy   FacilityPharmacy @relation(fields: [pharmacyId], references: [id], onDelete: Cascade)
    staffId    String           @db.Uuid
    day        String           @db.VarChar(10) // monday, tuesday, wednesday, thursday, friday, saturday, sunday
    startTime  String           @db.VarChar(5) // HH:MM
    endTime    String           @db.VarChar(5) // HH:MM
    createdAt  DateTime         @default(now())
    updatedAt  DateTime         @updatedAt
}
