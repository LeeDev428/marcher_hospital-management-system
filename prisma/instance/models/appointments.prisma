enum AppointmentStatus {
  PENDING
  SCHEDULED
  CANCELLED
  COMPLETED
}

model Appointment {
  id         String         @id @default(uuid()) @db.Uuid
  patientId  String         @db.Uuid
  patient    PatientProfile @relation(fields: [patientId], references: [id])

  doctorId   String         @db.Uuid

  // patient can book without a room; staff may assign later
  facilityId String?        @db.Uuid
  facility   Room?          @relation(fields: [facilityId], references: [id])

  date       String
  time       String
  status     AppointmentStatus

  // Opposite side of PatientAppointment.appointment (1:0..1)
  patientAppointment PatientAppointment? @relation("AppointmentToPatientAppointment")

  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model PatientAppointment {
  id         String         @id @default(uuid()) @db.Uuid

  patientId  String         @db.Uuid
  patient    PatientProfile @relation(fields: [patientId], references: [id])

  doctorId   String
  date       String
  time       String
  status     AppointmentStatus @default(PENDING)
  name       String?           // optional patient-entered display name

  // Link to the staff-facing Appointment row (only for patient-created bookings)
  appointmentId String?        @unique @db.Uuid
  appointment   Appointment?   @relation("AppointmentToPatientAppointment", fields: [appointmentId], references: [id])

  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}
