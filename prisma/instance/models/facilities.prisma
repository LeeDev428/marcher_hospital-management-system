model Building {
    id        String   @id @default(uuid()) @db.Uuid
    name      String
    rooms     Room[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum RoomType {
    WARD
    CLINIC
    LABORATORY
    PHARMACY
    OFFICE
}

enum RoomStatus {
    AVAILABLE
    OCCUPIED
    PREPARING
}

model Room {
    id           String        @id @default(uuid()) @db.Uuid
    buildingId   String        @db.Uuid
    building     Building      @relation(fields: [buildingId], references: [id], onDelete: Cascade)
    type         RoomType
    identifier   String        @unique
    description  String?
    capacity     Int?
    status       RoomStatus
    appointments Appointment[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
}

model FacilityLog {
    id             Int      @id @default(autoincrement())
    timestamp      DateTime @default(now())
    user           String
    role           String
    action         String
    roomIdentifier String
    type           String
    oldStatus      String?
    newStatus      String?
}
