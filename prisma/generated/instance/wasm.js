
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  facilityId: 'facilityId',
  date: 'date',
  time: 'time',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PatientAppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  date: 'date',
  time: 'time',
  status: 'status',
  name: 'name',
  appointmentId: 'appointmentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionItemScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  name: 'name',
  description: 'description',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  cycle: 'cycle',
  numberOfPayments: 'numberOfPayments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentInstalmentScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  planId: 'planId',
  instalmentNumber: 'instalmentNumber',
  amountDue: 'amountDue',
  amountPaid: 'amountPaid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClinicScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClinicScheduleScalarFieldEnum = {
  id: 'id',
  clinicId: 'clinicId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PatientEncounterScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  patientProfileId: 'patientProfileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OutpatientEncounterScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  date: 'date',
  time: 'time',
  chiefComplaint: 'chiefComplaint',
  doctorDiagnosis: 'doctorDiagnosis',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InpatientEncounterScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  date: 'date',
  time: 'time',
  chiefComplaint: 'chiefComplaint',
  doctorDiagnosis: 'doctorDiagnosis',
  triage: 'triage',
  disposition: 'disposition',
  dispositionDate: 'dispositionDate',
  dispositionTime: 'dispositionTime',
  dispositionNote: 'dispositionNote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InpatientEncounterChartScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  staffId: 'staffId',
  chart: 'chart',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InpatientEncounterOrderScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  type: 'type',
  order: 'order',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildingScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  buildingId: 'buildingId',
  type: 'type',
  identifier: 'identifier',
  description: 'description',
  capacity: 'capacity',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FacilityLogScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  user: 'user',
  role: 'role',
  action: 'action',
  roomIdentifier: 'roomIdentifier',
  type: 'type',
  oldStatus: 'oldStatus',
  newStatus: 'newStatus'
};

exports.Prisma.InsuranceProviderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  state: 'state',
  zip: 'zip',
  country: 'country',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InsuranceClaimScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  status: 'status',
  message: 'message',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InsuranceClaimItemScalarFieldEnum = {
  id: 'id',
  claimId: 'claimId',
  name: 'name',
  description: 'description',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  user: 'user',
  action: 'action',
  entity: 'entity',
  data: 'data',
  ipAddress: 'ipAddress',
  timestamp: 'timestamp'
};

exports.Prisma.PatientProfileScalarFieldEnum = {
  id: 'id',
  lastName: 'lastName',
  firstName: 'firstName',
  middleName: 'middleName',
  suffix: 'suffix',
  birthdate: 'birthdate',
  birthplace: 'birthplace',
  sex: 'sex',
  maritalStatus: 'maritalStatus',
  nationality: 'nationality',
  religion: 'religion',
  bloodType: 'bloodType',
  archived: 'archived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  label: 'label',
  country: 'country',
  state: 'state',
  zipCode: 'zipCode',
  city: 'city',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  type: 'type',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmploymentScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  employer: 'employer',
  contactPerson: 'contactPerson',
  address: 'address',
  phone: 'phone',
  email: 'email',
  website: 'website',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmergencyContactScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  lastName: 'lastName',
  firstName: 'firstName',
  middleName: 'middleName',
  suffix: 'suffix',
  relationship: 'relationship',
  phone: 'phone',
  email: 'email',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConsentScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  documentUrl: 'documentUrl',
  signature: 'signature',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicalRecordRequestScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  inpatientEncounterId: 'inpatientEncounterId',
  type: 'type',
  status: 'status',
  fileUrl: 'fileUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PharmacySupplierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  contact: 'contact',
  address: 'address',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PharmacyBrandScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PharmacyItemCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PharmacyItemScalarFieldEnum = {
  id: 'id',
  brandId: 'brandId',
  categoryId: 'categoryId',
  name: 'name',
  form: 'form',
  route: 'route',
  strength: 'strength',
  stock: 'stock',
  unit: 'unit',
  sku: 'sku',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  role: 'role',
  status: 'status',
  isEmailVerified: 'isEmailVerified',
  emailVerifiedAt: 'emailVerifiedAt',
  avatar: 'avatar',
  dateOfBirth: 'dateOfBirth',
  gender: 'gender',
  address: 'address',
  city: 'city',
  province: 'province',
  zipCode: 'zipCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLoginAt: 'lastLoginAt',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  isRevoked: 'isRevoked'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  patientNumber: 'patientNumber',
  bloodType: 'bloodType',
  allergies: 'allergies',
  medicalHistory: 'medicalHistory',
  emergencyContact: 'emergencyContact',
  emergencyPhone: 'emergencyPhone',
  insuranceProvider: 'insuranceProvider',
  insuranceNumber: 'insuranceNumber',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  staffNumber: 'staffNumber',
  department: 'department',
  position: 'position',
  specialization: 'specialization',
  licenseNumber: 'licenseNumber',
  hiredDate: 'hiredDate',
  salary: 'salary',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DoctorScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  staffId: 'staffId',
  doctorNumber: 'doctorNumber',
  medicalLicense: 'medicalLicense',
  specialization: 'specialization',
  subSpecialization: 'subSpecialization',
  boardCertification: 'boardCertification',
  yearsOfExperience: 'yearsOfExperience',
  education: 'education',
  hospitalAffiliation: 'hospitalAffiliation',
  consultationFee: 'consultationFee',
  isAvailable: 'isAvailable',
  workingHours: 'workingHours',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PartnerScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  institutionName: 'institutionName',
  institutionType: 'institutionType',
  licenseNumber: 'licenseNumber',
  website: 'website',
  contactPerson: 'contactPerson',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.AppointmentStatus = exports.$Enums.AppointmentStatus = {
  PENDING: 'PENDING',
  SCHEDULED: 'SCHEDULED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED'
};

exports.OutpatientEncounterType = exports.$Enums.OutpatientEncounterType = {
  CONSULTATION: 'CONSULTATION',
  FOLLOW_UP: 'FOLLOW_UP',
  LABORATORY: 'LABORATORY',
  RADIOLOGY: 'RADIOLOGY',
  OTHER: 'OTHER'
};

exports.InpatientTriage = exports.$Enums.InpatientTriage = {
  HIGH_PRIORITY: 'HIGH_PRIORITY',
  MEDIUM_PRIORITY: 'MEDIUM_PRIORITY',
  LOW_PRIORITY: 'LOW_PRIORITY',
  NON_URGENT: 'NON_URGENT'
};

exports.InpatientDisposition = exports.$Enums.InpatientDisposition = {
  ADMITTED: 'ADMITTED',
  DISCHARGED: 'DISCHARGED',
  DISCONTINUED: 'DISCONTINUED',
  TRANSFERRED: 'TRANSFERRED',
  DECEASED: 'DECEASED',
  OTHER: 'OTHER'
};

exports.InpatientEncounterOrderType = exports.$Enums.InpatientEncounterOrderType = {
  PRESCRIPTION: 'PRESCRIPTION',
  LABORATORY: 'LABORATORY',
  RADIOLOGY: 'RADIOLOGY',
  OPERATION: 'OPERATION',
  OTHER: 'OTHER'
};

exports.InpatientEncounterOrderStatus = exports.$Enums.InpatientEncounterOrderStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.RoomType = exports.$Enums.RoomType = {
  WARD: 'WARD',
  CLINIC: 'CLINIC',
  LABORATORY: 'LABORATORY',
  PHARMACY: 'PHARMACY',
  OFFICE: 'OFFICE'
};

exports.RoomStatus = exports.$Enums.RoomStatus = {
  AVAILABLE: 'AVAILABLE',
  OCCUPIED: 'OCCUPIED',
  PREPARING: 'PREPARING'
};

exports.Sex = exports.$Enums.Sex = {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

exports.MaritalStatus = exports.$Enums.MaritalStatus = {
  SINGLE: 'SINGLE',
  MARRIED: 'MARRIED',
  WIDOWED: 'WIDOWED',
  DIVORCED: 'DIVORCED',
  SEPARATED: 'SEPARATED'
};

exports.BloodType = exports.$Enums.BloodType = {
  A_POSITIVE: 'A_POSITIVE',
  A_NEGATIVE: 'A_NEGATIVE',
  B_POSITIVE: 'B_POSITIVE',
  B_NEGATIVE: 'B_NEGATIVE',
  AB_POSITIVE: 'AB_POSITIVE',
  AB_NEGATIVE: 'AB_NEGATIVE',
  O_POSITIVE: 'O_POSITIVE',
  O_NEGATIVE: 'O_NEGATIVE'
};

exports.ContactType = exports.$Enums.ContactType = {
  HOME: 'HOME',
  WORK: 'WORK',
  MOBILE: 'MOBILE',
  EMAIL: 'EMAIL',
  FAX: 'FAX',
  OTHER: 'OTHER'
};

exports.Relationship = exports.$Enums.Relationship = {
  FATHER: 'FATHER',
  MOTHER: 'MOTHER',
  SPOUSE: 'SPOUSE',
  SON: 'SON',
  DAUGHTER: 'DAUGHTER',
  SIBLING: 'SIBLING',
  GRANDMOTHER: 'GRANDMOTHER',
  GRANDFATHER: 'GRANDFATHER',
  GRANDCHILD: 'GRANDCHILD',
  COUSIN: 'COUSIN',
  UNCLE: 'UNCLE',
  GUARDIAN: 'GUARDIAN',
  AUXILIARY: 'AUXILIARY',
  OTHER: 'OTHER'
};

exports.PharmacyItemForm = exports.$Enums.PharmacyItemForm = {
  TABLET: 'TABLET',
  CAPSULE: 'CAPSULE',
  SYRUP: 'SYRUP',
  OINTMENT: 'OINTMENT',
  CREAM: 'CREAM',
  INJECTION: 'INJECTION',
  DROPS: 'DROPS',
  INHALER: 'INHALER',
  MEDICAL_DEVICE: 'MEDICAL_DEVICE',
  SUPPLEMENTS: 'SUPPLEMENTS',
  COSMETICS: 'COSMETICS',
  MISCELLANEOUS: 'MISCELLANEOUS'
};

exports.PharmacyItemRoute = exports.$Enums.PharmacyItemRoute = {
  INJECTION: 'INJECTION',
  TOPICAL: 'TOPICAL',
  TRANSDERMAL: 'TRANSDERMAL',
  OCULAR: 'OCULAR',
  OTIC: 'OTIC',
  NASAL: 'NASAL',
  ORAL: 'ORAL',
  INHALATIONAL: 'INHALATIONAL',
  RECTAL: 'RECTAL',
  VAGINAL: 'VAGINAL'
};

exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  STAFF: 'STAFF',
  PATIENT: 'PATIENT',
  PARTNER: 'PARTNER'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  PENDING_APPROVAL: 'PENDING_APPROVAL'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER',
  PREFER_NOT_TO_SAY: 'PREFER_NOT_TO_SAY'
};

exports.PartnerType = exports.$Enums.PartnerType = {
  HOSPITAL: 'HOSPITAL',
  CLINIC: 'CLINIC',
  LABORATORY: 'LABORATORY',
  PHARMACY: 'PHARMACY',
  DIAGNOSTIC_CENTER: 'DIAGNOSTIC_CENTER'
};

exports.Prisma.ModelName = {
  Appointment: 'Appointment',
  PatientAppointment: 'PatientAppointment',
  Transaction: 'Transaction',
  TransactionItem: 'TransactionItem',
  PaymentPlan: 'PaymentPlan',
  Payment: 'Payment',
  PaymentInstalment: 'PaymentInstalment',
  Clinic: 'Clinic',
  ClinicSchedule: 'ClinicSchedule',
  PatientEncounter: 'PatientEncounter',
  OutpatientEncounter: 'OutpatientEncounter',
  InpatientEncounter: 'InpatientEncounter',
  InpatientEncounterChart: 'InpatientEncounterChart',
  InpatientEncounterOrder: 'InpatientEncounterOrder',
  Building: 'Building',
  Room: 'Room',
  FacilityLog: 'FacilityLog',
  InsuranceProvider: 'InsuranceProvider',
  InsuranceClaim: 'InsuranceClaim',
  InsuranceClaimItem: 'InsuranceClaimItem',
  Log: 'Log',
  PatientProfile: 'PatientProfile',
  Address: 'Address',
  Contact: 'Contact',
  Employment: 'Employment',
  EmergencyContact: 'EmergencyContact',
  Consent: 'Consent',
  MedicalRecordRequest: 'MedicalRecordRequest',
  PharmacySupplier: 'PharmacySupplier',
  PharmacyBrand: 'PharmacyBrand',
  PharmacyItemCategory: 'PharmacyItemCategory',
  PharmacyItem: 'PharmacyItem',
  User: 'User',
  RefreshToken: 'RefreshToken',
  Patient: 'Patient',
  Staff: 'Staff',
  Doctor: 'Doctor',
  Partner: 'Partner'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Programming\\Systems\\Web-Systems\\Nuxtjs-Nodejs-Expressjs\\marcher_hospital-management-system\\prisma\\generated\\instance",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Programming\\Systems\\Web-Systems\\Nuxtjs-Nodejs-Expressjs\\marcher_hospital-management-system\\prisma\\instance\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../instance",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "INSTANCE_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "enum AppointmentStatus {\n  PENDING\n  SCHEDULED\n  CANCELLED\n  COMPLETED\n}\n\nmodel Appointment {\n  id        String         @id @default(uuid()) @db.Uuid\n  patientId String         @db.Uuid\n  patient   PatientProfile @relation(fields: [patientId], references: [id])\n\n  doctorId String @db.Uuid\n\n  // patient can book without a room; staff may assign later\n  facilityId String? @db.Uuid\n  facility   Room?   @relation(fields: [facilityId], references: [id])\n\n  date   String\n  time   String\n  status AppointmentStatus\n\n  // Opposite side of PatientAppointment.appointment (1:0..1)\n  patientAppointment PatientAppointment? @relation(\"AppointmentToPatientAppointment\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel PatientAppointment {\n  id String @id @default(uuid()) @db.Uuid\n\n  patientId String         @db.Uuid\n  patient   PatientProfile @relation(fields: [patientId], references: [id])\n\n  doctorId String\n  date     String\n  time     String\n  status   AppointmentStatus @default(PENDING)\n  name     String? // optional patient-entered display name\n\n  // Link to the staff-facing Appointment row (only for patient-created bookings)\n  appointmentId String?      @unique @db.Uuid\n  appointment   Appointment? @relation(\"AppointmentToPatientAppointment\", fields: [appointmentId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Transaction {\n  id          String            @id @default(uuid()) @db.Uuid\n  // publicId    String            @unique\n  encounterId String            @unique @db.Uuid\n  encounter   PatientEncounter  @relation(fields: [encounterId], references: [id])\n  status      String\n  items       TransactionItem[]\n  payments    Payment[]\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n\n  @@index([id])\n}\n\nmodel TransactionItem {\n  id            String      @id @default(uuid()) @db.Uuid\n  // publicId      String      @unique\n  transactionId String      @db.Uuid\n  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)\n  name          String\n  description   String?\n  amount        Int\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n\n  @@index([transactionId])\n}\n\nmodel PaymentPlan {\n  id               String              @id @default(uuid()) @db.Uuid\n  // publicId         String              @unique\n  name             String\n  description      String?\n  cycle            String\n  numberOfPayments Int\n  instalments      PaymentInstalment[]\n  createdAt        DateTime            @default(now())\n  updatedAt        DateTime            @updatedAt\n}\n\nmodel Payment {\n  id            String              @id @default(uuid()) @db.Uuid\n  // publicId      String              @unique\n  transactionId String              @db.Uuid\n  transaction   Transaction         @relation(fields: [transactionId], references: [id], onDelete: Cascade)\n  amount        Int\n  instalments   PaymentInstalment[]\n  createdAt     DateTime            @default(now())\n  updatedAt     DateTime            @updatedAt\n}\n\nmodel PaymentInstalment {\n  id               String      @id @default(uuid()) @db.Uuid\n  // publicId         String      @unique\n  paymentId        String      @db.Uuid\n  payment          Payment     @relation(fields: [paymentId], references: [id], onDelete: Cascade)\n  planId           String      @db.Uuid\n  plan             PaymentPlan @relation(fields: [planId], references: [id], onDelete: Cascade)\n  instalmentNumber Int\n  amountDue        Int\n  amountPaid       Int\n  createdAt        DateTime    @default(now())\n  updatedAt        DateTime    @updatedAt\n}\n\nmodel Clinic {\n  id        String           @id @default(uuid()) @db.Uuid\n  roomId    String           @db.Uuid\n  schedules ClinicSchedule[]\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @updatedAt\n}\n\nmodel ClinicSchedule {\n  id        String   @id @default(uuid()) @db.Uuid\n  clinicId  String   @db.Uuid\n  clinic    Clinic   @relation(fields: [clinicId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel PatientEncounter {\n  id               String         @id @default(uuid()) @db.Uuid\n  encounterId      String         @unique @db.Uuid\n  patientProfileId String         @db.Uuid\n  patientProfile   PatientProfile @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  transaction      Transaction?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  @@index([patientProfileId])\n}\n\nenum OutpatientEncounterType {\n  CONSULTATION\n  FOLLOW_UP\n  LABORATORY\n  RADIOLOGY\n  OTHER\n}\n\nmodel OutpatientEncounter {\n  id               String                  @id @default(uuid()) @db.Uuid\n  patientProfileId String                  @db.Uuid\n  patientProfile   PatientProfile          @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  date             String\n  time             String\n  chiefComplaint   String\n  doctorDiagnosis  String\n  type             OutpatientEncounterType\n  createdAt        DateTime                @default(now())\n  updatedAt        DateTime                @updatedAt\n\n  @@index([id])\n}\n\nenum InpatientTriage {\n  HIGH_PRIORITY\n  MEDIUM_PRIORITY\n  LOW_PRIORITY\n  NON_URGENT\n}\n\nenum InpatientDisposition {\n  ADMITTED\n  DISCHARGED\n  DISCONTINUED\n  TRANSFERRED\n  DECEASED\n  OTHER\n}\n\nmodel InpatientEncounter {\n  id                   String                    @id @default(uuid()) @db.Uuid\n  patientProfileId     String                    @db.Uuid\n  patientProfile       PatientProfile            @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  date                 String\n  time                 String\n  chiefComplaint       String\n  doctorDiagnosis      String\n  triage               InpatientTriage\n  disposition          InpatientDisposition      @default(ADMITTED)\n  dispositionDate      String?\n  dispositionTime      String?\n  dispositionNote      String?\n  charts               InpatientEncounterChart[]\n  orders               InpatientEncounterOrder[]\n  medicalRecordRequest MedicalRecordRequest[]\n  createdAt            DateTime                  @default(now())\n  updatedAt            DateTime                  @updatedAt\n\n  @@index([id])\n}\n\nmodel InpatientEncounterChart {\n  id          String             @id @default(uuid()) @db.Uuid\n  encounterId String             @db.Uuid\n  encounter   InpatientEncounter @relation(fields: [encounterId], references: [id], onDelete: Cascade)\n  staffId     String             @db.Uuid\n  chart       String\n  createdAt   DateTime           @default(now())\n  updatedAt   DateTime           @updatedAt\n\n  @@index([id, encounterId])\n}\n\nenum InpatientEncounterOrderType {\n  PRESCRIPTION\n  LABORATORY\n  RADIOLOGY\n  OPERATION\n  OTHER\n}\n\nenum InpatientEncounterOrderStatus {\n  PENDING\n  COMPLETED\n  CANCELLED\n}\n\nmodel InpatientEncounterOrder {\n  id          String                        @id @default(uuid()) @db.Uuid\n  encounterId String                        @db.Uuid\n  encounter   InpatientEncounter            @relation(fields: [encounterId], references: [id], onDelete: Cascade)\n  type        InpatientEncounterOrderType\n  order       String\n  status      InpatientEncounterOrderStatus\n  createdAt   DateTime                      @default(now())\n  updatedAt   DateTime                      @updatedAt\n\n  @@index([id, encounterId])\n}\n\nmodel Building {\n  id        String   @id @default(uuid()) @db.Uuid\n  name      String\n  rooms     Room[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nenum RoomType {\n  WARD\n  CLINIC\n  LABORATORY\n  PHARMACY\n  OFFICE\n}\n\nenum RoomStatus {\n  AVAILABLE\n  OCCUPIED\n  PREPARING\n}\n\nmodel Room {\n  id           String        @id @default(uuid()) @db.Uuid\n  buildingId   String        @db.Uuid\n  building     Building      @relation(fields: [buildingId], references: [id], onDelete: Cascade)\n  type         RoomType\n  identifier   String        @unique\n  description  String?\n  capacity     Int?\n  status       RoomStatus\n  appointments Appointment[]\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n}\n\nmodel FacilityLog {\n  id             Int      @id @default(autoincrement())\n  timestamp      DateTime @default(now())\n  user           String\n  role           String\n  action         String\n  roomIdentifier String\n  type           String\n  oldStatus      String?\n  newStatus      String?\n}\n\nmodel InsuranceProvider {\n  id          String           @id @default(uuid()) @db.Uuid\n  // publicId    String   @unique\n  name        String           @unique\n  description String?\n  email       String?\n  phone       String?\n  address     String?\n  city        String?\n  state       String?\n  zip         String?\n  country     String?\n  claims      InsuranceClaim[]\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n}\n\nmodel InsuranceClaim {\n  id         String               @id @default(uuid()) @db.Uuid\n  // publicId    String   @unique\n  providerId String               @db.Uuid\n  provider   InsuranceProvider    @relation(fields: [providerId], references: [id], onDelete: Cascade)\n  status     String\n  message    String?\n  amount     Int\n  items      InsuranceClaimItem[]\n  createdAt  DateTime             @default(now())\n  updatedAt  DateTime             @updatedAt\n}\n\nmodel InsuranceClaimItem {\n  id          String         @id @default(uuid()) @db.Uuid\n  // publicId    String   @unique\n  claimId     String         @db.Uuid\n  claim       InsuranceClaim @relation(fields: [claimId], references: [id], onDelete: Cascade)\n  name        String\n  description String?\n  amount      Int\n  createdAt   DateTime       @default(now())\n  updatedAt   DateTime       @updatedAt\n}\n\nmodel Log {\n  id        String   @id @default(uuid()) @db.Uuid\n  user      String\n  action    String\n  entity    String\n  data      Json\n  ipAddress String\n  timestamp DateTime @default(now())\n\n  @@index([user])\n  @@index([user, action])\n  @@index([user, entity])\n  @@index([user, entity, action])\n  @@index([action])\n  @@index([entity])\n  @@index([entity, action])\n  @@index([ipAddress])\n  @@index([timestamp])\n}\n\nenum Sex {\n  MALE\n  FEMALE\n}\n\nenum MaritalStatus {\n  SINGLE\n  MARRIED\n  WIDOWED\n  DIVORCED\n  SEPARATED\n}\n\nenum BloodType {\n  A_POSITIVE\n  A_NEGATIVE\n  B_POSITIVE\n  B_NEGATIVE\n  AB_POSITIVE\n  AB_NEGATIVE\n  O_POSITIVE\n  O_NEGATIVE\n}\n\nmodel PatientProfile {\n  id                    String                 @id @default(uuid()) @db.Uuid\n  lastName              String\n  firstName             String\n  middleName            String?\n  suffix                String?\n  birthdate             String?\n  birthplace            String?\n  sex                   Sex?\n  maritalStatus         MaritalStatus?\n  nationality           String?\n  religion              String?\n  bloodType             BloodType?\n  patientEncounters     PatientEncounter[]\n  inpatientEncounters   InpatientEncounter[]\n  outpatientEncounters  OutpatientEncounter[]\n  appointments          Appointment[]\n  patientAppointments   PatientAppointment[]\n  addresses             Address[]\n  contacts              Contact[]\n  employments           Employment[]\n  emergencyContacts     EmergencyContact[]\n  medicalRecordRequests MedicalRecordRequest[]\n  consent               Consent?\n  archived              Boolean                @default(false)\n  createdAt             DateTime               @default(now())\n  updatedAt             DateTime               @updatedAt\n\n  @@index([id])\n}\n\nmodel Address {\n  id               String         @id @default(uuid()) @db.Uuid\n  patientProfileId String         @db.Uuid\n  patientProfile   PatientProfile @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  label            String\n  country          String\n  state            String\n  zipCode          String\n  city             String\n  address          String\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  @@index([id, patientProfileId])\n}\n\nenum ContactType {\n  HOME\n  WORK\n  MOBILE\n  EMAIL\n  FAX\n  OTHER\n}\n\nmodel Contact {\n  id               String         @id @default(uuid()) @db.Uuid\n  patientProfileId String         @db.Uuid\n  patientProfile   PatientProfile @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  type             ContactType\n  value            String\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  @@index([id, patientProfileId])\n}\n\nmodel Employment {\n  id               String         @id @default(uuid()) @db.Uuid\n  patientProfileId String         @db.Uuid\n  patientProfile   PatientProfile @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  employer         String\n  contactPerson    String?\n  address          String?\n  phone            String?\n  email            String?\n  website          String?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  @@index([id, patientProfileId])\n}\n\nenum Relationship {\n  FATHER\n  MOTHER\n  SPOUSE\n  SON\n  DAUGHTER\n  SIBLING\n  GRANDMOTHER\n  GRANDFATHER\n  GRANDCHILD\n  COUSIN\n  UNCLE\n  GUARDIAN\n  AUXILIARY\n  OTHER\n}\n\nmodel EmergencyContact {\n  id               String         @id @default(uuid()) @db.Uuid\n  patientProfileId String         @db.Uuid\n  patientProfile   PatientProfile @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  lastName         String\n  firstName        String\n  middleName       String?\n  suffix           String?\n  relationship     Relationship\n  phone            String?\n  email            String?\n  address          String?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  @@index([id, patientProfileId])\n}\n\nmodel Consent {\n  id               String         @id @default(uuid()) @db.Uuid\n  patientProfileId String         @unique @db.Uuid\n  patientProfile   PatientProfile @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  documentUrl      String\n  signature        String\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  @@index([id, patientProfileId])\n}\n\nmodel MedicalRecordRequest {\n  id                   String             @id @default(uuid()) @db.Uuid\n  patientProfileId     String             @db.Uuid\n  patientProfile       PatientProfile     @relation(fields: [patientProfileId], references: [id], onDelete: Cascade)\n  inpatientEncounterId String             @db.Uuid\n  inpatientEncounter   InpatientEncounter @relation(fields: [inpatientEncounterId], references: [id], onDelete: Cascade)\n  type                 String\n  status               String\n  fileUrl              String\n  createdAt            DateTime           @default(now())\n  updatedAt            DateTime           @updatedAt\n}\n\nmodel PharmacySupplier {\n  id        String   @id @default(uuid()) @db.Uuid\n  name      String\n  email     String?\n  contact   String?\n  address   String?\n  notes     String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([id, name, email, contact])\n}\n\nmodel PharmacyBrand {\n  id        String         @id @default(uuid()) @db.Uuid\n  name      String\n  items     PharmacyItem[]\n  createdAt DateTime       @default(now())\n  updatedAt DateTime       @updatedAt\n\n  @@index([id, name])\n}\n\nmodel PharmacyItemCategory {\n  id        String         @id @default(uuid()) @db.Uuid\n  name      String\n  items     PharmacyItem[]\n  createdAt DateTime       @default(now())\n  updatedAt DateTime       @updatedAt\n\n  @@index([id, name])\n}\n\nenum PharmacyItemForm {\n  TABLET\n  CAPSULE\n  SYRUP\n  OINTMENT\n  CREAM\n  INJECTION\n  DROPS\n  INHALER\n  MEDICAL_DEVICE\n  SUPPLEMENTS\n  COSMETICS\n  MISCELLANEOUS\n}\n\nenum PharmacyItemRoute {\n  INJECTION\n  TOPICAL\n  TRANSDERMAL\n  OCULAR\n  OTIC\n  NASAL\n  ORAL\n  INHALATIONAL\n  RECTAL\n  VAGINAL\n}\n\nmodel PharmacyItem {\n  id         String               @id @default(uuid()) @db.Uuid\n  brandId    String               @db.Uuid\n  brand      PharmacyBrand        @relation(fields: [brandId], references: [id], onDelete: Restrict)\n  categoryId String               @db.Uuid\n  category   PharmacyItemCategory @relation(fields: [categoryId], references: [id], onDelete: Restrict)\n  name       String\n  form       PharmacyItemForm\n  route      PharmacyItemRoute\n  strength   String\n  stock      Int\n  unit       String\n  sku        String?\n  createdAt  DateTime             @default(now())\n  updatedAt  DateTime             @updatedAt\n\n  @@index([id, brandId, categoryId, name, form, strength, stock, unit, sku])\n}\n\n// User Authentication Model\nmodel User {\n  id              String     @id @default(cuid())\n  email           String     @unique\n  password        String // Hashed password\n  firstName       String\n  lastName        String\n  phone           String?\n  role            UserRole   @default(PATIENT)\n  status          UserStatus @default(ACTIVE)\n  isEmailVerified Boolean    @default(false)\n  emailVerifiedAt DateTime?\n\n  // Profile information\n  avatar      String?\n  dateOfBirth DateTime?\n  gender      Gender?\n  address     String?\n  city        String?\n  province    String?\n  zipCode     String?\n\n  // System fields\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  lastLoginAt DateTime?\n\n  // Relationships\n  refreshTokens  RefreshToken[]\n  patientProfile Patient?\n  staffProfile   Staff?\n  partnerProfile Partner?\n  doctorProfile  Doctor?\n\n  // Audit fields\n  createdBy String?\n  updatedBy String?\n\n  @@map(\"users\")\n}\n\n// Refresh Tokens for JWT\nmodel RefreshToken {\n  id        String   @id @default(cuid())\n  token     String   @unique\n  userId    String\n  expiresAt DateTime\n  createdAt DateTime @default(now())\n  isRevoked Boolean  @default(false)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"refresh_tokens\")\n}\n\n// User Roles\nenum UserRole {\n  ADMIN\n  STAFF\n  PATIENT\n  PARTNER\n}\n\n// User Status\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  PENDING_APPROVAL\n}\n\n// Gender Enum\nenum Gender {\n  MALE\n  FEMALE\n  OTHER\n  PREFER_NOT_TO_SAY\n}\n\n// Extended Patient Profile\nmodel Patient {\n  id            String @id @default(cuid())\n  userId        String @unique\n  patientNumber String @unique\n\n  // Medical Information\n  bloodType        BloodType?\n  allergies        String?\n  medicalHistory   String?\n  emergencyContact String?\n  emergencyPhone   String?\n\n  // Insurance Information\n  insuranceProvider String?\n  insuranceNumber   String?\n\n  // System fields\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"patients\")\n}\n\n// Staff Profile\nmodel Staff {\n  id             String  @id @default(cuid())\n  userId         String  @unique\n  staffNumber    String  @unique\n  department     String?\n  position       String?\n  specialization String?\n  licenseNumber  String?\n\n  // Employment details\n  hiredDate DateTime?\n  salary    Decimal?\n\n  // System fields\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n  doctorProfile Doctor?\n\n  @@map(\"staff\")\n}\n\n// Doctor Profile (extends Staff)\nmodel Doctor {\n  id           String @id @default(cuid())\n  userId       String @unique\n  staffId      String @unique\n  doctorNumber String @unique\n\n  // Medical credentials\n  medicalLicense     String\n  specialization     String\n  subSpecialization  String?\n  boardCertification String?\n\n  // Professional details\n  yearsOfExperience   Int?\n  education           String?\n  hospitalAffiliation String?\n  consultationFee     Decimal?\n\n  // Availability\n  isAvailable  Boolean @default(true)\n  workingHours String? // JSON string for schedule\n\n  // System fields\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  staff Staff @relation(fields: [staffId], references: [id], onDelete: Cascade)\n\n  @@map(\"doctors\")\n}\n\n// Partner Profile (Hospital/Clinic)\nmodel Partner {\n  id              String      @id @default(cuid())\n  userId          String      @unique\n  institutionName String\n  institutionType PartnerType\n  licenseNumber   String?\n\n  // Contact Information\n  website       String?\n  contactPerson String?\n\n  // System fields\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"partners\")\n}\n\n// Partner Type Enum\nenum PartnerType {\n  HOSPITAL\n  CLINIC\n  LABORATORY\n  PHARMACY\n  DIAGNOSTIC_CENTER\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/instance\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"INSTANCE_DATABASE_URL\")\n}\n",
  "inlineSchemaHash": "b376eb448aaf43bd901ecb5fc37882a5bf85b7f60444ebba50d3cacec47c8a8a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"AppointmentToPatientProfile\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facilityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facility\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"AppointmentToRoom\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"patientAppointment\",\"kind\":\"object\",\"type\":\"PatientAppointment\",\"relationName\":\"AppointmentToPatientAppointment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PatientAppointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"PatientAppointmentToPatientProfile\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToPatientAppointment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounter\",\"kind\":\"object\",\"type\":\"PatientEncounter\",\"relationName\":\"PatientEncounterToTransaction\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"TransactionItem\",\"relationName\":\"TransactionToTransactionItem\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToTransaction\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TransactionItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToTransactionItem\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cycle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numberOfPayments\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instalments\",\"kind\":\"object\",\"type\":\"PaymentInstalment\",\"relationName\":\"PaymentInstalmentToPaymentPlan\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"PaymentToTransaction\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instalments\",\"kind\":\"object\",\"type\":\"PaymentInstalment\",\"relationName\":\"PaymentToPaymentInstalment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentInstalment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPaymentInstalment\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"PaymentPlan\",\"relationName\":\"PaymentInstalmentToPaymentPlan\"},{\"name\":\"instalmentNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountDue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountPaid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Clinic\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"ClinicSchedule\",\"relationName\":\"ClinicToClinicSchedule\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ClinicSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clinicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clinic\",\"kind\":\"object\",\"type\":\"Clinic\",\"relationName\":\"ClinicToClinicSchedule\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PatientEncounter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"PatientEncounterToPatientProfile\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"PatientEncounterToTransaction\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OutpatientEncounter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"OutpatientEncounterToPatientProfile\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chiefComplaint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorDiagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"OutpatientEncounterType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InpatientEncounter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"InpatientEncounterToPatientProfile\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chiefComplaint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorDiagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"triage\",\"kind\":\"enum\",\"type\":\"InpatientTriage\"},{\"name\":\"disposition\",\"kind\":\"enum\",\"type\":\"InpatientDisposition\"},{\"name\":\"dispositionDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dispositionTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dispositionNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"charts\",\"kind\":\"object\",\"type\":\"InpatientEncounterChart\",\"relationName\":\"InpatientEncounterToInpatientEncounterChart\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"InpatientEncounterOrder\",\"relationName\":\"InpatientEncounterToInpatientEncounterOrder\"},{\"name\":\"medicalRecordRequest\",\"kind\":\"object\",\"type\":\"MedicalRecordRequest\",\"relationName\":\"InpatientEncounterToMedicalRecordRequest\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InpatientEncounterChart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounter\",\"kind\":\"object\",\"type\":\"InpatientEncounter\",\"relationName\":\"InpatientEncounterToInpatientEncounterChart\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InpatientEncounterOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encounter\",\"kind\":\"object\",\"type\":\"InpatientEncounter\",\"relationName\":\"InpatientEncounterToInpatientEncounterOrder\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"InpatientEncounterOrderType\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InpatientEncounterOrderStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Building\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rooms\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"BuildingToRoom\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buildingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"building\",\"kind\":\"object\",\"type\":\"Building\",\"relationName\":\"BuildingToRoom\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"RoomType\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoomStatus\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToRoom\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"FacilityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomIdentifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newStatus\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"InsuranceProvider\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"claims\",\"kind\":\"object\",\"type\":\"InsuranceClaim\",\"relationName\":\"InsuranceClaimToInsuranceProvider\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InsuranceClaim\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"InsuranceProvider\",\"relationName\":\"InsuranceClaimToInsuranceProvider\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"InsuranceClaimItem\",\"relationName\":\"InsuranceClaimToInsuranceClaimItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InsuranceClaimItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"claimId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"claim\",\"kind\":\"object\",\"type\":\"InsuranceClaim\",\"relationName\":\"InsuranceClaimToInsuranceClaimItem\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Log\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PatientProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"middleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suffix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthdate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthplace\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sex\",\"kind\":\"enum\",\"type\":\"Sex\"},{\"name\":\"maritalStatus\",\"kind\":\"enum\",\"type\":\"MaritalStatus\"},{\"name\":\"nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"religion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bloodType\",\"kind\":\"enum\",\"type\":\"BloodType\"},{\"name\":\"patientEncounters\",\"kind\":\"object\",\"type\":\"PatientEncounter\",\"relationName\":\"PatientEncounterToPatientProfile\"},{\"name\":\"inpatientEncounters\",\"kind\":\"object\",\"type\":\"InpatientEncounter\",\"relationName\":\"InpatientEncounterToPatientProfile\"},{\"name\":\"outpatientEncounters\",\"kind\":\"object\",\"type\":\"OutpatientEncounter\",\"relationName\":\"OutpatientEncounterToPatientProfile\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToPatientProfile\"},{\"name\":\"patientAppointments\",\"kind\":\"object\",\"type\":\"PatientAppointment\",\"relationName\":\"PatientAppointmentToPatientProfile\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToPatientProfile\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToPatientProfile\"},{\"name\":\"employments\",\"kind\":\"object\",\"type\":\"Employment\",\"relationName\":\"EmploymentToPatientProfile\"},{\"name\":\"emergencyContacts\",\"kind\":\"object\",\"type\":\"EmergencyContact\",\"relationName\":\"EmergencyContactToPatientProfile\"},{\"name\":\"medicalRecordRequests\",\"kind\":\"object\",\"type\":\"MedicalRecordRequest\",\"relationName\":\"MedicalRecordRequestToPatientProfile\"},{\"name\":\"consent\",\"kind\":\"object\",\"type\":\"Consent\",\"relationName\":\"ConsentToPatientProfile\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"AddressToPatientProfile\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"ContactToPatientProfile\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ContactType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Employment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"EmploymentToPatientProfile\"},{\"name\":\"employer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EmergencyContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"EmergencyContactToPatientProfile\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"middleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suffix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relationship\",\"kind\":\"enum\",\"type\":\"Relationship\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Consent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"ConsentToPatientProfile\"},{\"name\":\"documentUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MedicalRecordRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"PatientProfile\",\"relationName\":\"MedicalRecordRequestToPatientProfile\"},{\"name\":\"inpatientEncounterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inpatientEncounter\",\"kind\":\"object\",\"type\":\"InpatientEncounter\",\"relationName\":\"InpatientEncounterToMedicalRecordRequest\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PharmacySupplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PharmacyBrand\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"PharmacyItem\",\"relationName\":\"PharmacyBrandToPharmacyItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PharmacyItemCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"PharmacyItem\",\"relationName\":\"PharmacyItemToPharmacyItemCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PharmacyItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brandId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"object\",\"type\":\"PharmacyBrand\",\"relationName\":\"PharmacyBrandToPharmacyItem\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"PharmacyItemCategory\",\"relationName\":\"PharmacyItemToPharmacyItemCategory\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"form\",\"kind\":\"enum\",\"type\":\"PharmacyItemForm\"},{\"name\":\"route\",\"kind\":\"enum\",\"type\":\"PharmacyItemRoute\"},{\"name\":\"strength\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"patientProfile\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToUser\"},{\"name\":\"staffProfile\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"StaffToUser\"},{\"name\":\"partnerProfile\",\"kind\":\"object\",\"type\":\"Partner\",\"relationName\":\"PartnerToUser\"},{\"name\":\"doctorProfile\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToUser\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"users\"},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isRevoked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":\"refresh_tokens\"},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bloodType\",\"kind\":\"enum\",\"type\":\"BloodType\"},{\"name\":\"allergies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalHistory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insuranceProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insuranceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientToUser\"}],\"dbName\":\"patients\"},\"Staff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hiredDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StaffToUser\"},{\"name\":\"doctorProfile\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToStaff\"}],\"dbName\":\"staff\"},\"Doctor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalLicense\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subSpecialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"boardCertification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsOfExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"education\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hospitalAffiliation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consultationFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"workingHours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DoctorToUser\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"DoctorToStaff\"}],\"dbName\":\"doctors\"},\"Partner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institutionName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institutionType\",\"kind\":\"enum\",\"type\":\"PartnerType\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PartnerToUser\"}],\"dbName\":\"partners\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    INSTANCE_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['INSTANCE_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.INSTANCE_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

