
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Appointment: 'Appointment',
  PatientAppointment: 'PatientAppointment',
  Transaction: 'Transaction',
  TransactionItem: 'TransactionItem',
  PaymentPlan: 'PaymentPlan',
  Payment: 'Payment',
  PaymentInstalment: 'PaymentInstalment',
  Clinic: 'Clinic',
  ClinicSchedule: 'ClinicSchedule',
  PatientEncounter: 'PatientEncounter',
  OutpatientEncounter: 'OutpatientEncounter',
  InpatientEncounter: 'InpatientEncounter',
  InpatientEncounterChart: 'InpatientEncounterChart',
  InpatientEncounterOrder: 'InpatientEncounterOrder',
  Building: 'Building',
  Room: 'Room',
  FacilityLog: 'FacilityLog',
  InsuranceProvider: 'InsuranceProvider',
  InsuranceClaim: 'InsuranceClaim',
  InsuranceClaimItem: 'InsuranceClaimItem',
  Log: 'Log',
  PatientProfile: 'PatientProfile',
  Address: 'Address',
  Contact: 'Contact',
  Employment: 'Employment',
  EmergencyContact: 'EmergencyContact',
  Consent: 'Consent',
  MedicalRecordRequest: 'MedicalRecordRequest',
  PharmacySupplier: 'PharmacySupplier',
  PharmacyBrand: 'PharmacyBrand',
  PharmacyItemCategory: 'PharmacyItemCategory',
  PharmacyItem: 'PharmacyItem'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const AppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  facilityId: 'facilityId',
  date: 'date',
  time: 'time',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AppointmentScalarFieldEnum = (typeof AppointmentScalarFieldEnum)[keyof typeof AppointmentScalarFieldEnum]


export const PatientAppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  date: 'date',
  time: 'time',
  status: 'status',
  name: 'name',
  appointmentId: 'appointmentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PatientAppointmentScalarFieldEnum = (typeof PatientAppointmentScalarFieldEnum)[keyof typeof PatientAppointmentScalarFieldEnum]


export const TransactionScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


export const TransactionItemScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  name: 'name',
  description: 'description',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type TransactionItemScalarFieldEnum = (typeof TransactionItemScalarFieldEnum)[keyof typeof TransactionItemScalarFieldEnum]


export const PaymentPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  cycle: 'cycle',
  numberOfPayments: 'numberOfPayments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PaymentPlanScalarFieldEnum = (typeof PaymentPlanScalarFieldEnum)[keyof typeof PaymentPlanScalarFieldEnum]


export const PaymentScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


export const PaymentInstalmentScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  planId: 'planId',
  instalmentNumber: 'instalmentNumber',
  amountDue: 'amountDue',
  amountPaid: 'amountPaid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PaymentInstalmentScalarFieldEnum = (typeof PaymentInstalmentScalarFieldEnum)[keyof typeof PaymentInstalmentScalarFieldEnum]


export const ClinicScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ClinicScalarFieldEnum = (typeof ClinicScalarFieldEnum)[keyof typeof ClinicScalarFieldEnum]


export const ClinicScheduleScalarFieldEnum = {
  id: 'id',
  clinicId: 'clinicId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ClinicScheduleScalarFieldEnum = (typeof ClinicScheduleScalarFieldEnum)[keyof typeof ClinicScheduleScalarFieldEnum]


export const PatientEncounterScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  patientProfileId: 'patientProfileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PatientEncounterScalarFieldEnum = (typeof PatientEncounterScalarFieldEnum)[keyof typeof PatientEncounterScalarFieldEnum]


export const OutpatientEncounterScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  date: 'date',
  time: 'time',
  chiefComplaint: 'chiefComplaint',
  doctorDiagnosis: 'doctorDiagnosis',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type OutpatientEncounterScalarFieldEnum = (typeof OutpatientEncounterScalarFieldEnum)[keyof typeof OutpatientEncounterScalarFieldEnum]


export const InpatientEncounterScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  date: 'date',
  time: 'time',
  chiefComplaint: 'chiefComplaint',
  doctorDiagnosis: 'doctorDiagnosis',
  triage: 'triage',
  disposition: 'disposition',
  dispositionDate: 'dispositionDate',
  dispositionTime: 'dispositionTime',
  dispositionNote: 'dispositionNote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InpatientEncounterScalarFieldEnum = (typeof InpatientEncounterScalarFieldEnum)[keyof typeof InpatientEncounterScalarFieldEnum]


export const InpatientEncounterChartScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  staffId: 'staffId',
  chart: 'chart',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InpatientEncounterChartScalarFieldEnum = (typeof InpatientEncounterChartScalarFieldEnum)[keyof typeof InpatientEncounterChartScalarFieldEnum]


export const InpatientEncounterOrderScalarFieldEnum = {
  id: 'id',
  encounterId: 'encounterId',
  type: 'type',
  order: 'order',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InpatientEncounterOrderScalarFieldEnum = (typeof InpatientEncounterOrderScalarFieldEnum)[keyof typeof InpatientEncounterOrderScalarFieldEnum]


export const BuildingScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type BuildingScalarFieldEnum = (typeof BuildingScalarFieldEnum)[keyof typeof BuildingScalarFieldEnum]


export const RoomScalarFieldEnum = {
  id: 'id',
  buildingId: 'buildingId',
  type: 'type',
  identifier: 'identifier',
  description: 'description',
  capacity: 'capacity',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type RoomScalarFieldEnum = (typeof RoomScalarFieldEnum)[keyof typeof RoomScalarFieldEnum]


export const FacilityLogScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  user: 'user',
  role: 'role',
  action: 'action',
  roomIdentifier: 'roomIdentifier',
  type: 'type',
  oldStatus: 'oldStatus',
  newStatus: 'newStatus'
} as const

export type FacilityLogScalarFieldEnum = (typeof FacilityLogScalarFieldEnum)[keyof typeof FacilityLogScalarFieldEnum]


export const InsuranceProviderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  state: 'state',
  zip: 'zip',
  country: 'country',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InsuranceProviderScalarFieldEnum = (typeof InsuranceProviderScalarFieldEnum)[keyof typeof InsuranceProviderScalarFieldEnum]


export const InsuranceClaimScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  status: 'status',
  message: 'message',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InsuranceClaimScalarFieldEnum = (typeof InsuranceClaimScalarFieldEnum)[keyof typeof InsuranceClaimScalarFieldEnum]


export const InsuranceClaimItemScalarFieldEnum = {
  id: 'id',
  claimId: 'claimId',
  name: 'name',
  description: 'description',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type InsuranceClaimItemScalarFieldEnum = (typeof InsuranceClaimItemScalarFieldEnum)[keyof typeof InsuranceClaimItemScalarFieldEnum]


export const LogScalarFieldEnum = {
  id: 'id',
  user: 'user',
  action: 'action',
  entity: 'entity',
  data: 'data',
  ipAddress: 'ipAddress',
  timestamp: 'timestamp'
} as const

export type LogScalarFieldEnum = (typeof LogScalarFieldEnum)[keyof typeof LogScalarFieldEnum]


export const PatientProfileScalarFieldEnum = {
  id: 'id',
  lastName: 'lastName',
  firstName: 'firstName',
  middleName: 'middleName',
  suffix: 'suffix',
  birthdate: 'birthdate',
  birthplace: 'birthplace',
  sex: 'sex',
  maritalStatus: 'maritalStatus',
  nationality: 'nationality',
  religion: 'religion',
  bloodType: 'bloodType',
  archived: 'archived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PatientProfileScalarFieldEnum = (typeof PatientProfileScalarFieldEnum)[keyof typeof PatientProfileScalarFieldEnum]


export const AddressScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  label: 'label',
  country: 'country',
  state: 'state',
  zipCode: 'zipCode',
  city: 'city',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


export const ContactScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  type: 'type',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


export const EmploymentScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  employer: 'employer',
  contactPerson: 'contactPerson',
  address: 'address',
  phone: 'phone',
  email: 'email',
  website: 'website',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type EmploymentScalarFieldEnum = (typeof EmploymentScalarFieldEnum)[keyof typeof EmploymentScalarFieldEnum]


export const EmergencyContactScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  lastName: 'lastName',
  firstName: 'firstName',
  middleName: 'middleName',
  suffix: 'suffix',
  relationship: 'relationship',
  phone: 'phone',
  email: 'email',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type EmergencyContactScalarFieldEnum = (typeof EmergencyContactScalarFieldEnum)[keyof typeof EmergencyContactScalarFieldEnum]


export const ConsentScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  documentUrl: 'documentUrl',
  signature: 'signature',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ConsentScalarFieldEnum = (typeof ConsentScalarFieldEnum)[keyof typeof ConsentScalarFieldEnum]


export const MedicalRecordRequestScalarFieldEnum = {
  id: 'id',
  patientProfileId: 'patientProfileId',
  inpatientEncounterId: 'inpatientEncounterId',
  type: 'type',
  status: 'status',
  fileUrl: 'fileUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MedicalRecordRequestScalarFieldEnum = (typeof MedicalRecordRequestScalarFieldEnum)[keyof typeof MedicalRecordRequestScalarFieldEnum]


export const PharmacySupplierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  contact: 'contact',
  address: 'address',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PharmacySupplierScalarFieldEnum = (typeof PharmacySupplierScalarFieldEnum)[keyof typeof PharmacySupplierScalarFieldEnum]


export const PharmacyBrandScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PharmacyBrandScalarFieldEnum = (typeof PharmacyBrandScalarFieldEnum)[keyof typeof PharmacyBrandScalarFieldEnum]


export const PharmacyItemCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PharmacyItemCategoryScalarFieldEnum = (typeof PharmacyItemCategoryScalarFieldEnum)[keyof typeof PharmacyItemCategoryScalarFieldEnum]


export const PharmacyItemScalarFieldEnum = {
  id: 'id',
  brandId: 'brandId',
  categoryId: 'categoryId',
  name: 'name',
  form: 'form',
  route: 'route',
  strength: 'strength',
  stock: 'stock',
  unit: 'unit',
  sku: 'sku',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PharmacyItemScalarFieldEnum = (typeof PharmacyItemScalarFieldEnum)[keyof typeof PharmacyItemScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const JsonNullValueInput = {
  JsonNull: JsonNull
} as const

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]

