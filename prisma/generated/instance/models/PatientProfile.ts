
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PatientProfile` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model PatientProfile
 * 
 */
export type PatientProfileModel = runtime.Types.Result.DefaultSelection<Prisma.$PatientProfilePayload>

export type AggregatePatientProfile = {
  _count: PatientProfileCountAggregateOutputType | null
  _min: PatientProfileMinAggregateOutputType | null
  _max: PatientProfileMaxAggregateOutputType | null
}

export type PatientProfileMinAggregateOutputType = {
  id: string | null
  lastName: string | null
  firstName: string | null
  middleName: string | null
  suffix: string | null
  birthdate: string | null
  birthplace: string | null
  sex: $Enums.Sex | null
  maritalStatus: $Enums.MaritalStatus | null
  nationality: string | null
  religion: string | null
  bloodType: $Enums.BloodType | null
  archived: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PatientProfileMaxAggregateOutputType = {
  id: string | null
  lastName: string | null
  firstName: string | null
  middleName: string | null
  suffix: string | null
  birthdate: string | null
  birthplace: string | null
  sex: $Enums.Sex | null
  maritalStatus: $Enums.MaritalStatus | null
  nationality: string | null
  religion: string | null
  bloodType: $Enums.BloodType | null
  archived: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PatientProfileCountAggregateOutputType = {
  id: number
  lastName: number
  firstName: number
  middleName: number
  suffix: number
  birthdate: number
  birthplace: number
  sex: number
  maritalStatus: number
  nationality: number
  religion: number
  bloodType: number
  archived: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type PatientProfileMinAggregateInputType = {
  id?: true
  lastName?: true
  firstName?: true
  middleName?: true
  suffix?: true
  birthdate?: true
  birthplace?: true
  sex?: true
  maritalStatus?: true
  nationality?: true
  religion?: true
  bloodType?: true
  archived?: true
  createdAt?: true
  updatedAt?: true
}

export type PatientProfileMaxAggregateInputType = {
  id?: true
  lastName?: true
  firstName?: true
  middleName?: true
  suffix?: true
  birthdate?: true
  birthplace?: true
  sex?: true
  maritalStatus?: true
  nationality?: true
  religion?: true
  bloodType?: true
  archived?: true
  createdAt?: true
  updatedAt?: true
}

export type PatientProfileCountAggregateInputType = {
  id?: true
  lastName?: true
  firstName?: true
  middleName?: true
  suffix?: true
  birthdate?: true
  birthplace?: true
  sex?: true
  maritalStatus?: true
  nationality?: true
  religion?: true
  bloodType?: true
  archived?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type PatientProfileAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PatientProfile to aggregate.
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PatientProfiles to fetch.
   */
  orderBy?: Prisma.PatientProfileOrderByWithRelationInput | Prisma.PatientProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PatientProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PatientProfiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PatientProfiles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PatientProfiles
  **/
  _count?: true | PatientProfileCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PatientProfileMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PatientProfileMaxAggregateInputType
}

export type GetPatientProfileAggregateType<T extends PatientProfileAggregateArgs> = {
      [P in keyof T & keyof AggregatePatientProfile]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePatientProfile[P]>
    : Prisma.GetScalarType<T[P], AggregatePatientProfile[P]>
}




export type PatientProfileGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PatientProfileWhereInput
  orderBy?: Prisma.PatientProfileOrderByWithAggregationInput | Prisma.PatientProfileOrderByWithAggregationInput[]
  by: Prisma.PatientProfileScalarFieldEnum[] | Prisma.PatientProfileScalarFieldEnum
  having?: Prisma.PatientProfileScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PatientProfileCountAggregateInputType | true
  _min?: PatientProfileMinAggregateInputType
  _max?: PatientProfileMaxAggregateInputType
}

export type PatientProfileGroupByOutputType = {
  id: string
  lastName: string
  firstName: string
  middleName: string | null
  suffix: string | null
  birthdate: string | null
  birthplace: string | null
  sex: $Enums.Sex | null
  maritalStatus: $Enums.MaritalStatus | null
  nationality: string | null
  religion: string | null
  bloodType: $Enums.BloodType | null
  archived: boolean
  createdAt: Date
  updatedAt: Date
  _count: PatientProfileCountAggregateOutputType | null
  _min: PatientProfileMinAggregateOutputType | null
  _max: PatientProfileMaxAggregateOutputType | null
}

type GetPatientProfileGroupByPayload<T extends PatientProfileGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PatientProfileGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PatientProfileGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PatientProfileGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PatientProfileGroupByOutputType[P]>
      }
    >
  >



export type PatientProfileWhereInput = {
  AND?: Prisma.PatientProfileWhereInput | Prisma.PatientProfileWhereInput[]
  OR?: Prisma.PatientProfileWhereInput[]
  NOT?: Prisma.PatientProfileWhereInput | Prisma.PatientProfileWhereInput[]
  id?: Prisma.UuidFilter<"PatientProfile"> | string
  lastName?: Prisma.StringFilter<"PatientProfile"> | string
  firstName?: Prisma.StringFilter<"PatientProfile"> | string
  middleName?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  suffix?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  birthdate?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  birthplace?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  sex?: Prisma.EnumSexNullableFilter<"PatientProfile"> | $Enums.Sex | null
  maritalStatus?: Prisma.EnumMaritalStatusNullableFilter<"PatientProfile"> | $Enums.MaritalStatus | null
  nationality?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  religion?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  bloodType?: Prisma.EnumBloodTypeNullableFilter<"PatientProfile"> | $Enums.BloodType | null
  archived?: Prisma.BoolFilter<"PatientProfile"> | boolean
  createdAt?: Prisma.DateTimeFilter<"PatientProfile"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"PatientProfile"> | Date | string
  patientEncounters?: Prisma.PatientEncounterListRelationFilter
  inpatientEncounters?: Prisma.InpatientEncounterListRelationFilter
  outpatientEncounters?: Prisma.OutpatientEncounterListRelationFilter
  appointments?: Prisma.AppointmentListRelationFilter
  patientAppointments?: Prisma.PatientAppointmentListRelationFilter
  addresses?: Prisma.AddressListRelationFilter
  contacts?: Prisma.ContactListRelationFilter
  employments?: Prisma.EmploymentListRelationFilter
  emergencyContacts?: Prisma.EmergencyContactListRelationFilter
  medicalRecordRequests?: Prisma.MedicalRecordRequestListRelationFilter
  consent?: Prisma.XOR<Prisma.ConsentNullableScalarRelationFilter, Prisma.ConsentWhereInput> | null
}

export type PatientProfileOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  middleName?: Prisma.SortOrderInput | Prisma.SortOrder
  suffix?: Prisma.SortOrderInput | Prisma.SortOrder
  birthdate?: Prisma.SortOrderInput | Prisma.SortOrder
  birthplace?: Prisma.SortOrderInput | Prisma.SortOrder
  sex?: Prisma.SortOrderInput | Prisma.SortOrder
  maritalStatus?: Prisma.SortOrderInput | Prisma.SortOrder
  nationality?: Prisma.SortOrderInput | Prisma.SortOrder
  religion?: Prisma.SortOrderInput | Prisma.SortOrder
  bloodType?: Prisma.SortOrderInput | Prisma.SortOrder
  archived?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  patientEncounters?: Prisma.PatientEncounterOrderByRelationAggregateInput
  inpatientEncounters?: Prisma.InpatientEncounterOrderByRelationAggregateInput
  outpatientEncounters?: Prisma.OutpatientEncounterOrderByRelationAggregateInput
  appointments?: Prisma.AppointmentOrderByRelationAggregateInput
  patientAppointments?: Prisma.PatientAppointmentOrderByRelationAggregateInput
  addresses?: Prisma.AddressOrderByRelationAggregateInput
  contacts?: Prisma.ContactOrderByRelationAggregateInput
  employments?: Prisma.EmploymentOrderByRelationAggregateInput
  emergencyContacts?: Prisma.EmergencyContactOrderByRelationAggregateInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestOrderByRelationAggregateInput
  consent?: Prisma.ConsentOrderByWithRelationInput
}

export type PatientProfileWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PatientProfileWhereInput | Prisma.PatientProfileWhereInput[]
  OR?: Prisma.PatientProfileWhereInput[]
  NOT?: Prisma.PatientProfileWhereInput | Prisma.PatientProfileWhereInput[]
  lastName?: Prisma.StringFilter<"PatientProfile"> | string
  firstName?: Prisma.StringFilter<"PatientProfile"> | string
  middleName?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  suffix?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  birthdate?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  birthplace?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  sex?: Prisma.EnumSexNullableFilter<"PatientProfile"> | $Enums.Sex | null
  maritalStatus?: Prisma.EnumMaritalStatusNullableFilter<"PatientProfile"> | $Enums.MaritalStatus | null
  nationality?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  religion?: Prisma.StringNullableFilter<"PatientProfile"> | string | null
  bloodType?: Prisma.EnumBloodTypeNullableFilter<"PatientProfile"> | $Enums.BloodType | null
  archived?: Prisma.BoolFilter<"PatientProfile"> | boolean
  createdAt?: Prisma.DateTimeFilter<"PatientProfile"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"PatientProfile"> | Date | string
  patientEncounters?: Prisma.PatientEncounterListRelationFilter
  inpatientEncounters?: Prisma.InpatientEncounterListRelationFilter
  outpatientEncounters?: Prisma.OutpatientEncounterListRelationFilter
  appointments?: Prisma.AppointmentListRelationFilter
  patientAppointments?: Prisma.PatientAppointmentListRelationFilter
  addresses?: Prisma.AddressListRelationFilter
  contacts?: Prisma.ContactListRelationFilter
  employments?: Prisma.EmploymentListRelationFilter
  emergencyContacts?: Prisma.EmergencyContactListRelationFilter
  medicalRecordRequests?: Prisma.MedicalRecordRequestListRelationFilter
  consent?: Prisma.XOR<Prisma.ConsentNullableScalarRelationFilter, Prisma.ConsentWhereInput> | null
}, "id">

export type PatientProfileOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  middleName?: Prisma.SortOrderInput | Prisma.SortOrder
  suffix?: Prisma.SortOrderInput | Prisma.SortOrder
  birthdate?: Prisma.SortOrderInput | Prisma.SortOrder
  birthplace?: Prisma.SortOrderInput | Prisma.SortOrder
  sex?: Prisma.SortOrderInput | Prisma.SortOrder
  maritalStatus?: Prisma.SortOrderInput | Prisma.SortOrder
  nationality?: Prisma.SortOrderInput | Prisma.SortOrder
  religion?: Prisma.SortOrderInput | Prisma.SortOrder
  bloodType?: Prisma.SortOrderInput | Prisma.SortOrder
  archived?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.PatientProfileCountOrderByAggregateInput
  _max?: Prisma.PatientProfileMaxOrderByAggregateInput
  _min?: Prisma.PatientProfileMinOrderByAggregateInput
}

export type PatientProfileScalarWhereWithAggregatesInput = {
  AND?: Prisma.PatientProfileScalarWhereWithAggregatesInput | Prisma.PatientProfileScalarWhereWithAggregatesInput[]
  OR?: Prisma.PatientProfileScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PatientProfileScalarWhereWithAggregatesInput | Prisma.PatientProfileScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"PatientProfile"> | string
  lastName?: Prisma.StringWithAggregatesFilter<"PatientProfile"> | string
  firstName?: Prisma.StringWithAggregatesFilter<"PatientProfile"> | string
  middleName?: Prisma.StringNullableWithAggregatesFilter<"PatientProfile"> | string | null
  suffix?: Prisma.StringNullableWithAggregatesFilter<"PatientProfile"> | string | null
  birthdate?: Prisma.StringNullableWithAggregatesFilter<"PatientProfile"> | string | null
  birthplace?: Prisma.StringNullableWithAggregatesFilter<"PatientProfile"> | string | null
  sex?: Prisma.EnumSexNullableWithAggregatesFilter<"PatientProfile"> | $Enums.Sex | null
  maritalStatus?: Prisma.EnumMaritalStatusNullableWithAggregatesFilter<"PatientProfile"> | $Enums.MaritalStatus | null
  nationality?: Prisma.StringNullableWithAggregatesFilter<"PatientProfile"> | string | null
  religion?: Prisma.StringNullableWithAggregatesFilter<"PatientProfile"> | string | null
  bloodType?: Prisma.EnumBloodTypeNullableWithAggregatesFilter<"PatientProfile"> | $Enums.BloodType | null
  archived?: Prisma.BoolWithAggregatesFilter<"PatientProfile"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"PatientProfile"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"PatientProfile"> | Date | string
}

export type PatientProfileCreateInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateManyInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PatientProfileUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PatientProfileUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PatientProfileScalarRelationFilter = {
  is?: Prisma.PatientProfileWhereInput
  isNot?: Prisma.PatientProfileWhereInput
}

export type PatientProfileCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  middleName?: Prisma.SortOrder
  suffix?: Prisma.SortOrder
  birthdate?: Prisma.SortOrder
  birthplace?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  maritalStatus?: Prisma.SortOrder
  nationality?: Prisma.SortOrder
  religion?: Prisma.SortOrder
  bloodType?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PatientProfileMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  middleName?: Prisma.SortOrder
  suffix?: Prisma.SortOrder
  birthdate?: Prisma.SortOrder
  birthplace?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  maritalStatus?: Prisma.SortOrder
  nationality?: Prisma.SortOrder
  religion?: Prisma.SortOrder
  bloodType?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PatientProfileMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  middleName?: Prisma.SortOrder
  suffix?: Prisma.SortOrder
  birthdate?: Prisma.SortOrder
  birthplace?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  maritalStatus?: Prisma.SortOrder
  nationality?: Prisma.SortOrder
  religion?: Prisma.SortOrder
  bloodType?: Prisma.SortOrder
  archived?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PatientProfileCreateNestedOneWithoutAppointmentsInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutAppointmentsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutAppointmentsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutAppointmentsNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutAppointmentsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutAppointmentsInput
  upsert?: Prisma.PatientProfileUpsertWithoutAppointmentsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutAppointmentsInput, Prisma.PatientProfileUpdateWithoutAppointmentsInput>, Prisma.PatientProfileUncheckedUpdateWithoutAppointmentsInput>
}

export type PatientProfileCreateNestedOneWithoutPatientAppointmentsInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutPatientAppointmentsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutPatientAppointmentsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutPatientAppointmentsNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutPatientAppointmentsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutPatientAppointmentsInput
  upsert?: Prisma.PatientProfileUpsertWithoutPatientAppointmentsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutPatientAppointmentsInput, Prisma.PatientProfileUpdateWithoutPatientAppointmentsInput>, Prisma.PatientProfileUncheckedUpdateWithoutPatientAppointmentsInput>
}

export type PatientProfileCreateNestedOneWithoutPatientEncountersInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutPatientEncountersInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutPatientEncountersInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutPatientEncountersNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutPatientEncountersInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutPatientEncountersInput
  upsert?: Prisma.PatientProfileUpsertWithoutPatientEncountersInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutPatientEncountersInput, Prisma.PatientProfileUpdateWithoutPatientEncountersInput>, Prisma.PatientProfileUncheckedUpdateWithoutPatientEncountersInput>
}

export type PatientProfileCreateNestedOneWithoutOutpatientEncountersInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutOutpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutOutpatientEncountersInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutOutpatientEncountersInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutOutpatientEncountersNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutOutpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutOutpatientEncountersInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutOutpatientEncountersInput
  upsert?: Prisma.PatientProfileUpsertWithoutOutpatientEncountersInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutOutpatientEncountersInput, Prisma.PatientProfileUpdateWithoutOutpatientEncountersInput>, Prisma.PatientProfileUncheckedUpdateWithoutOutpatientEncountersInput>
}

export type PatientProfileCreateNestedOneWithoutInpatientEncountersInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutInpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutInpatientEncountersInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutInpatientEncountersInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutInpatientEncountersNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutInpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutInpatientEncountersInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutInpatientEncountersInput
  upsert?: Prisma.PatientProfileUpsertWithoutInpatientEncountersInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutInpatientEncountersInput, Prisma.PatientProfileUpdateWithoutInpatientEncountersInput>, Prisma.PatientProfileUncheckedUpdateWithoutInpatientEncountersInput>
}

export type NullableEnumSexFieldUpdateOperationsInput = {
  set?: $Enums.Sex | null
}

export type NullableEnumMaritalStatusFieldUpdateOperationsInput = {
  set?: $Enums.MaritalStatus | null
}

export type NullableEnumBloodTypeFieldUpdateOperationsInput = {
  set?: $Enums.BloodType | null
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type PatientProfileCreateNestedOneWithoutAddressesInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutAddressesInput, Prisma.PatientProfileUncheckedCreateWithoutAddressesInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutAddressesInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutAddressesNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutAddressesInput, Prisma.PatientProfileUncheckedCreateWithoutAddressesInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutAddressesInput
  upsert?: Prisma.PatientProfileUpsertWithoutAddressesInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutAddressesInput, Prisma.PatientProfileUpdateWithoutAddressesInput>, Prisma.PatientProfileUncheckedUpdateWithoutAddressesInput>
}

export type PatientProfileCreateNestedOneWithoutContactsInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutContactsInput, Prisma.PatientProfileUncheckedCreateWithoutContactsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutContactsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutContactsNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutContactsInput, Prisma.PatientProfileUncheckedCreateWithoutContactsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutContactsInput
  upsert?: Prisma.PatientProfileUpsertWithoutContactsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutContactsInput, Prisma.PatientProfileUpdateWithoutContactsInput>, Prisma.PatientProfileUncheckedUpdateWithoutContactsInput>
}

export type PatientProfileCreateNestedOneWithoutEmploymentsInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmploymentsInput, Prisma.PatientProfileUncheckedCreateWithoutEmploymentsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutEmploymentsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutEmploymentsNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmploymentsInput, Prisma.PatientProfileUncheckedCreateWithoutEmploymentsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutEmploymentsInput
  upsert?: Prisma.PatientProfileUpsertWithoutEmploymentsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutEmploymentsInput, Prisma.PatientProfileUpdateWithoutEmploymentsInput>, Prisma.PatientProfileUncheckedUpdateWithoutEmploymentsInput>
}

export type PatientProfileCreateNestedOneWithoutEmergencyContactsInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmergencyContactsInput, Prisma.PatientProfileUncheckedCreateWithoutEmergencyContactsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutEmergencyContactsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutEmergencyContactsNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmergencyContactsInput, Prisma.PatientProfileUncheckedCreateWithoutEmergencyContactsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutEmergencyContactsInput
  upsert?: Prisma.PatientProfileUpsertWithoutEmergencyContactsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutEmergencyContactsInput, Prisma.PatientProfileUpdateWithoutEmergencyContactsInput>, Prisma.PatientProfileUncheckedUpdateWithoutEmergencyContactsInput>
}

export type PatientProfileCreateNestedOneWithoutConsentInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutConsentInput, Prisma.PatientProfileUncheckedCreateWithoutConsentInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutConsentInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutConsentNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutConsentInput, Prisma.PatientProfileUncheckedCreateWithoutConsentInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutConsentInput
  upsert?: Prisma.PatientProfileUpsertWithoutConsentInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutConsentInput, Prisma.PatientProfileUpdateWithoutConsentInput>, Prisma.PatientProfileUncheckedUpdateWithoutConsentInput>
}

export type PatientProfileCreateNestedOneWithoutMedicalRecordRequestsInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUncheckedCreateWithoutMedicalRecordRequestsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutMedicalRecordRequestsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
}

export type PatientProfileUpdateOneRequiredWithoutMedicalRecordRequestsNestedInput = {
  create?: Prisma.XOR<Prisma.PatientProfileCreateWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUncheckedCreateWithoutMedicalRecordRequestsInput>
  connectOrCreate?: Prisma.PatientProfileCreateOrConnectWithoutMedicalRecordRequestsInput
  upsert?: Prisma.PatientProfileUpsertWithoutMedicalRecordRequestsInput
  connect?: Prisma.PatientProfileWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PatientProfileUpdateToOneWithWhereWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUpdateWithoutMedicalRecordRequestsInput>, Prisma.PatientProfileUncheckedUpdateWithoutMedicalRecordRequestsInput>
}

export type PatientProfileCreateWithoutAppointmentsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutAppointmentsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutAppointmentsInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutAppointmentsInput>
}

export type PatientProfileUpsertWithoutAppointmentsInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutAppointmentsInput, Prisma.PatientProfileUncheckedUpdateWithoutAppointmentsInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutAppointmentsInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutAppointmentsInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutAppointmentsInput, Prisma.PatientProfileUncheckedUpdateWithoutAppointmentsInput>
}

export type PatientProfileUpdateWithoutAppointmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutAppointmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutPatientAppointmentsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutPatientAppointmentsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutPatientAppointmentsInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutPatientAppointmentsInput>
}

export type PatientProfileUpsertWithoutPatientAppointmentsInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutPatientAppointmentsInput, Prisma.PatientProfileUncheckedUpdateWithoutPatientAppointmentsInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientAppointmentsInput, Prisma.PatientProfileUncheckedCreateWithoutPatientAppointmentsInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutPatientAppointmentsInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutPatientAppointmentsInput, Prisma.PatientProfileUncheckedUpdateWithoutPatientAppointmentsInput>
}

export type PatientProfileUpdateWithoutPatientAppointmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutPatientAppointmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutPatientEncountersInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutPatientEncountersInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutPatientEncountersInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutPatientEncountersInput>
}

export type PatientProfileUpsertWithoutPatientEncountersInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutPatientEncountersInput, Prisma.PatientProfileUncheckedUpdateWithoutPatientEncountersInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutPatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutPatientEncountersInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutPatientEncountersInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutPatientEncountersInput, Prisma.PatientProfileUncheckedUpdateWithoutPatientEncountersInput>
}

export type PatientProfileUpdateWithoutPatientEncountersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutPatientEncountersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutOutpatientEncountersInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutOutpatientEncountersInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutOutpatientEncountersInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutOutpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutOutpatientEncountersInput>
}

export type PatientProfileUpsertWithoutOutpatientEncountersInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutOutpatientEncountersInput, Prisma.PatientProfileUncheckedUpdateWithoutOutpatientEncountersInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutOutpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutOutpatientEncountersInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutOutpatientEncountersInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutOutpatientEncountersInput, Prisma.PatientProfileUncheckedUpdateWithoutOutpatientEncountersInput>
}

export type PatientProfileUpdateWithoutOutpatientEncountersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutOutpatientEncountersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutInpatientEncountersInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutInpatientEncountersInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutInpatientEncountersInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutInpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutInpatientEncountersInput>
}

export type PatientProfileUpsertWithoutInpatientEncountersInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutInpatientEncountersInput, Prisma.PatientProfileUncheckedUpdateWithoutInpatientEncountersInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutInpatientEncountersInput, Prisma.PatientProfileUncheckedCreateWithoutInpatientEncountersInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutInpatientEncountersInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutInpatientEncountersInput, Prisma.PatientProfileUncheckedUpdateWithoutInpatientEncountersInput>
}

export type PatientProfileUpdateWithoutInpatientEncountersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutInpatientEncountersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutAddressesInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutAddressesInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutAddressesInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutAddressesInput, Prisma.PatientProfileUncheckedCreateWithoutAddressesInput>
}

export type PatientProfileUpsertWithoutAddressesInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutAddressesInput, Prisma.PatientProfileUncheckedUpdateWithoutAddressesInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutAddressesInput, Prisma.PatientProfileUncheckedCreateWithoutAddressesInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutAddressesInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutAddressesInput, Prisma.PatientProfileUncheckedUpdateWithoutAddressesInput>
}

export type PatientProfileUpdateWithoutAddressesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutAddressesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutContactsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutContactsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutContactsInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutContactsInput, Prisma.PatientProfileUncheckedCreateWithoutContactsInput>
}

export type PatientProfileUpsertWithoutContactsInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutContactsInput, Prisma.PatientProfileUncheckedUpdateWithoutContactsInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutContactsInput, Prisma.PatientProfileUncheckedCreateWithoutContactsInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutContactsInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutContactsInput, Prisma.PatientProfileUncheckedUpdateWithoutContactsInput>
}

export type PatientProfileUpdateWithoutContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutEmploymentsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutEmploymentsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutEmploymentsInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmploymentsInput, Prisma.PatientProfileUncheckedCreateWithoutEmploymentsInput>
}

export type PatientProfileUpsertWithoutEmploymentsInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutEmploymentsInput, Prisma.PatientProfileUncheckedUpdateWithoutEmploymentsInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmploymentsInput, Prisma.PatientProfileUncheckedCreateWithoutEmploymentsInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutEmploymentsInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutEmploymentsInput, Prisma.PatientProfileUncheckedUpdateWithoutEmploymentsInput>
}

export type PatientProfileUpdateWithoutEmploymentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutEmploymentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutEmergencyContactsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutEmergencyContactsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutEmergencyContactsInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmergencyContactsInput, Prisma.PatientProfileUncheckedCreateWithoutEmergencyContactsInput>
}

export type PatientProfileUpsertWithoutEmergencyContactsInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutEmergencyContactsInput, Prisma.PatientProfileUncheckedUpdateWithoutEmergencyContactsInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutEmergencyContactsInput, Prisma.PatientProfileUncheckedCreateWithoutEmergencyContactsInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutEmergencyContactsInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutEmergencyContactsInput, Prisma.PatientProfileUncheckedUpdateWithoutEmergencyContactsInput>
}

export type PatientProfileUpdateWithoutEmergencyContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutEmergencyContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutConsentInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestCreateNestedManyWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutConsentInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedCreateNestedManyWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutConsentInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutConsentInput, Prisma.PatientProfileUncheckedCreateWithoutConsentInput>
}

export type PatientProfileUpsertWithoutConsentInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutConsentInput, Prisma.PatientProfileUncheckedUpdateWithoutConsentInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutConsentInput, Prisma.PatientProfileUncheckedCreateWithoutConsentInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutConsentInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutConsentInput, Prisma.PatientProfileUncheckedUpdateWithoutConsentInput>
}

export type PatientProfileUpdateWithoutConsentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUpdateManyWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutConsentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  medicalRecordRequests?: Prisma.MedicalRecordRequestUncheckedUpdateManyWithoutPatientProfileNestedInput
}

export type PatientProfileCreateWithoutMedicalRecordRequestsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileUncheckedCreateWithoutMedicalRecordRequestsInput = {
  id?: string
  lastName: string
  firstName: string
  middleName?: string | null
  suffix?: string | null
  birthdate?: string | null
  birthplace?: string | null
  sex?: $Enums.Sex | null
  maritalStatus?: $Enums.MaritalStatus | null
  nationality?: string | null
  religion?: string | null
  bloodType?: $Enums.BloodType | null
  archived?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedCreateNestedManyWithoutPatientProfileInput
  appointments?: Prisma.AppointmentUncheckedCreateNestedManyWithoutPatientInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedCreateNestedManyWithoutPatientInput
  addresses?: Prisma.AddressUncheckedCreateNestedManyWithoutPatientProfileInput
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutPatientProfileInput
  employments?: Prisma.EmploymentUncheckedCreateNestedManyWithoutPatientProfileInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedCreateNestedManyWithoutPatientProfileInput
  consent?: Prisma.ConsentUncheckedCreateNestedOneWithoutPatientProfileInput
}

export type PatientProfileCreateOrConnectWithoutMedicalRecordRequestsInput = {
  where: Prisma.PatientProfileWhereUniqueInput
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUncheckedCreateWithoutMedicalRecordRequestsInput>
}

export type PatientProfileUpsertWithoutMedicalRecordRequestsInput = {
  update: Prisma.XOR<Prisma.PatientProfileUpdateWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUncheckedUpdateWithoutMedicalRecordRequestsInput>
  create: Prisma.XOR<Prisma.PatientProfileCreateWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUncheckedCreateWithoutMedicalRecordRequestsInput>
  where?: Prisma.PatientProfileWhereInput
}

export type PatientProfileUpdateToOneWithWhereWithoutMedicalRecordRequestsInput = {
  where?: Prisma.PatientProfileWhereInput
  data: Prisma.XOR<Prisma.PatientProfileUpdateWithoutMedicalRecordRequestsInput, Prisma.PatientProfileUncheckedUpdateWithoutMedicalRecordRequestsInput>
}

export type PatientProfileUpdateWithoutMedicalRecordRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUpdateOneWithoutPatientProfileNestedInput
}

export type PatientProfileUncheckedUpdateWithoutMedicalRecordRequestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  lastName?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.StringFieldUpdateOperationsInput | string
  middleName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  suffix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthdate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthplace?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.NullableEnumSexFieldUpdateOperationsInput | $Enums.Sex | null
  maritalStatus?: Prisma.NullableEnumMaritalStatusFieldUpdateOperationsInput | $Enums.MaritalStatus | null
  nationality?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  religion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bloodType?: Prisma.NullableEnumBloodTypeFieldUpdateOperationsInput | $Enums.BloodType | null
  archived?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  patientEncounters?: Prisma.PatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  inpatientEncounters?: Prisma.InpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  outpatientEncounters?: Prisma.OutpatientEncounterUncheckedUpdateManyWithoutPatientProfileNestedInput
  appointments?: Prisma.AppointmentUncheckedUpdateManyWithoutPatientNestedInput
  patientAppointments?: Prisma.PatientAppointmentUncheckedUpdateManyWithoutPatientNestedInput
  addresses?: Prisma.AddressUncheckedUpdateManyWithoutPatientProfileNestedInput
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  employments?: Prisma.EmploymentUncheckedUpdateManyWithoutPatientProfileNestedInput
  emergencyContacts?: Prisma.EmergencyContactUncheckedUpdateManyWithoutPatientProfileNestedInput
  consent?: Prisma.ConsentUncheckedUpdateOneWithoutPatientProfileNestedInput
}


/**
 * Count Type PatientProfileCountOutputType
 */

export type PatientProfileCountOutputType = {
  patientEncounters: number
  inpatientEncounters: number
  outpatientEncounters: number
  appointments: number
  patientAppointments: number
  addresses: number
  contacts: number
  employments: number
  emergencyContacts: number
  medicalRecordRequests: number
}

export type PatientProfileCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  patientEncounters?: boolean | PatientProfileCountOutputTypeCountPatientEncountersArgs
  inpatientEncounters?: boolean | PatientProfileCountOutputTypeCountInpatientEncountersArgs
  outpatientEncounters?: boolean | PatientProfileCountOutputTypeCountOutpatientEncountersArgs
  appointments?: boolean | PatientProfileCountOutputTypeCountAppointmentsArgs
  patientAppointments?: boolean | PatientProfileCountOutputTypeCountPatientAppointmentsArgs
  addresses?: boolean | PatientProfileCountOutputTypeCountAddressesArgs
  contacts?: boolean | PatientProfileCountOutputTypeCountContactsArgs
  employments?: boolean | PatientProfileCountOutputTypeCountEmploymentsArgs
  emergencyContacts?: boolean | PatientProfileCountOutputTypeCountEmergencyContactsArgs
  medicalRecordRequests?: boolean | PatientProfileCountOutputTypeCountMedicalRecordRequestsArgs
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfileCountOutputType
   */
  select?: Prisma.PatientProfileCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountPatientEncountersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PatientEncounterWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountInpatientEncountersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InpatientEncounterWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountOutpatientEncountersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OutpatientEncounterWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountAppointmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AppointmentWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountPatientAppointmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PatientAppointmentWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountAddressesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AddressWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountContactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ContactWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountEmploymentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmploymentWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountEmergencyContactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmergencyContactWhereInput
}

/**
 * PatientProfileCountOutputType without action
 */
export type PatientProfileCountOutputTypeCountMedicalRecordRequestsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MedicalRecordRequestWhereInput
}


export type PatientProfileSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  middleName?: boolean
  suffix?: boolean
  birthdate?: boolean
  birthplace?: boolean
  sex?: boolean
  maritalStatus?: boolean
  nationality?: boolean
  religion?: boolean
  bloodType?: boolean
  archived?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  patientEncounters?: boolean | Prisma.PatientProfile$patientEncountersArgs<ExtArgs>
  inpatientEncounters?: boolean | Prisma.PatientProfile$inpatientEncountersArgs<ExtArgs>
  outpatientEncounters?: boolean | Prisma.PatientProfile$outpatientEncountersArgs<ExtArgs>
  appointments?: boolean | Prisma.PatientProfile$appointmentsArgs<ExtArgs>
  patientAppointments?: boolean | Prisma.PatientProfile$patientAppointmentsArgs<ExtArgs>
  addresses?: boolean | Prisma.PatientProfile$addressesArgs<ExtArgs>
  contacts?: boolean | Prisma.PatientProfile$contactsArgs<ExtArgs>
  employments?: boolean | Prisma.PatientProfile$employmentsArgs<ExtArgs>
  emergencyContacts?: boolean | Prisma.PatientProfile$emergencyContactsArgs<ExtArgs>
  medicalRecordRequests?: boolean | Prisma.PatientProfile$medicalRecordRequestsArgs<ExtArgs>
  consent?: boolean | Prisma.PatientProfile$consentArgs<ExtArgs>
  _count?: boolean | Prisma.PatientProfileCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["patientProfile"]>

export type PatientProfileSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  middleName?: boolean
  suffix?: boolean
  birthdate?: boolean
  birthplace?: boolean
  sex?: boolean
  maritalStatus?: boolean
  nationality?: boolean
  religion?: boolean
  bloodType?: boolean
  archived?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["patientProfile"]>

export type PatientProfileSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  middleName?: boolean
  suffix?: boolean
  birthdate?: boolean
  birthplace?: boolean
  sex?: boolean
  maritalStatus?: boolean
  nationality?: boolean
  religion?: boolean
  bloodType?: boolean
  archived?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["patientProfile"]>

export type PatientProfileSelectScalar = {
  id?: boolean
  lastName?: boolean
  firstName?: boolean
  middleName?: boolean
  suffix?: boolean
  birthdate?: boolean
  birthplace?: boolean
  sex?: boolean
  maritalStatus?: boolean
  nationality?: boolean
  religion?: boolean
  bloodType?: boolean
  archived?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type PatientProfileOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "lastName" | "firstName" | "middleName" | "suffix" | "birthdate" | "birthplace" | "sex" | "maritalStatus" | "nationality" | "religion" | "bloodType" | "archived" | "createdAt" | "updatedAt", ExtArgs["result"]["patientProfile"]>
export type PatientProfileInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  patientEncounters?: boolean | Prisma.PatientProfile$patientEncountersArgs<ExtArgs>
  inpatientEncounters?: boolean | Prisma.PatientProfile$inpatientEncountersArgs<ExtArgs>
  outpatientEncounters?: boolean | Prisma.PatientProfile$outpatientEncountersArgs<ExtArgs>
  appointments?: boolean | Prisma.PatientProfile$appointmentsArgs<ExtArgs>
  patientAppointments?: boolean | Prisma.PatientProfile$patientAppointmentsArgs<ExtArgs>
  addresses?: boolean | Prisma.PatientProfile$addressesArgs<ExtArgs>
  contacts?: boolean | Prisma.PatientProfile$contactsArgs<ExtArgs>
  employments?: boolean | Prisma.PatientProfile$employmentsArgs<ExtArgs>
  emergencyContacts?: boolean | Prisma.PatientProfile$emergencyContactsArgs<ExtArgs>
  medicalRecordRequests?: boolean | Prisma.PatientProfile$medicalRecordRequestsArgs<ExtArgs>
  consent?: boolean | Prisma.PatientProfile$consentArgs<ExtArgs>
  _count?: boolean | Prisma.PatientProfileCountOutputTypeDefaultArgs<ExtArgs>
}
export type PatientProfileIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type PatientProfileIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $PatientProfilePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PatientProfile"
  objects: {
    patientEncounters: Prisma.$PatientEncounterPayload<ExtArgs>[]
    inpatientEncounters: Prisma.$InpatientEncounterPayload<ExtArgs>[]
    outpatientEncounters: Prisma.$OutpatientEncounterPayload<ExtArgs>[]
    appointments: Prisma.$AppointmentPayload<ExtArgs>[]
    patientAppointments: Prisma.$PatientAppointmentPayload<ExtArgs>[]
    addresses: Prisma.$AddressPayload<ExtArgs>[]
    contacts: Prisma.$ContactPayload<ExtArgs>[]
    employments: Prisma.$EmploymentPayload<ExtArgs>[]
    emergencyContacts: Prisma.$EmergencyContactPayload<ExtArgs>[]
    medicalRecordRequests: Prisma.$MedicalRecordRequestPayload<ExtArgs>[]
    consent: Prisma.$ConsentPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    lastName: string
    firstName: string
    middleName: string | null
    suffix: string | null
    birthdate: string | null
    birthplace: string | null
    sex: $Enums.Sex | null
    maritalStatus: $Enums.MaritalStatus | null
    nationality: string | null
    religion: string | null
    bloodType: $Enums.BloodType | null
    archived: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["patientProfile"]>
  composites: {}
}

export type PatientProfileGetPayload<S extends boolean | null | undefined | PatientProfileDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload, S>

export type PatientProfileCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PatientProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PatientProfileCountAggregateInputType | true
  }

export interface PatientProfileDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PatientProfile'], meta: { name: 'PatientProfile' } }
  /**
   * Find zero or one PatientProfile that matches the filter.
   * @param {PatientProfileFindUniqueArgs} args - Arguments to find a PatientProfile
   * @example
   * // Get one PatientProfile
   * const patientProfile = await prisma.patientProfile.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PatientProfileFindUniqueArgs>(args: Prisma.SelectSubset<T, PatientProfileFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PatientProfile that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PatientProfileFindUniqueOrThrowArgs} args - Arguments to find a PatientProfile
   * @example
   * // Get one PatientProfile
   * const patientProfile = await prisma.patientProfile.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PatientProfileFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PatientProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PatientProfile that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileFindFirstArgs} args - Arguments to find a PatientProfile
   * @example
   * // Get one PatientProfile
   * const patientProfile = await prisma.patientProfile.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PatientProfileFindFirstArgs>(args?: Prisma.SelectSubset<T, PatientProfileFindFirstArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PatientProfile that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileFindFirstOrThrowArgs} args - Arguments to find a PatientProfile
   * @example
   * // Get one PatientProfile
   * const patientProfile = await prisma.patientProfile.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PatientProfileFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PatientProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PatientProfiles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PatientProfiles
   * const patientProfiles = await prisma.patientProfile.findMany()
   * 
   * // Get first 10 PatientProfiles
   * const patientProfiles = await prisma.patientProfile.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const patientProfileWithIdOnly = await prisma.patientProfile.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PatientProfileFindManyArgs>(args?: Prisma.SelectSubset<T, PatientProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PatientProfile.
   * @param {PatientProfileCreateArgs} args - Arguments to create a PatientProfile.
   * @example
   * // Create one PatientProfile
   * const PatientProfile = await prisma.patientProfile.create({
   *   data: {
   *     // ... data to create a PatientProfile
   *   }
   * })
   * 
   */
  create<T extends PatientProfileCreateArgs>(args: Prisma.SelectSubset<T, PatientProfileCreateArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PatientProfiles.
   * @param {PatientProfileCreateManyArgs} args - Arguments to create many PatientProfiles.
   * @example
   * // Create many PatientProfiles
   * const patientProfile = await prisma.patientProfile.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PatientProfileCreateManyArgs>(args?: Prisma.SelectSubset<T, PatientProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PatientProfiles and returns the data saved in the database.
   * @param {PatientProfileCreateManyAndReturnArgs} args - Arguments to create many PatientProfiles.
   * @example
   * // Create many PatientProfiles
   * const patientProfile = await prisma.patientProfile.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PatientProfiles and only return the `id`
   * const patientProfileWithIdOnly = await prisma.patientProfile.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PatientProfileCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PatientProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PatientProfile.
   * @param {PatientProfileDeleteArgs} args - Arguments to delete one PatientProfile.
   * @example
   * // Delete one PatientProfile
   * const PatientProfile = await prisma.patientProfile.delete({
   *   where: {
   *     // ... filter to delete one PatientProfile
   *   }
   * })
   * 
   */
  delete<T extends PatientProfileDeleteArgs>(args: Prisma.SelectSubset<T, PatientProfileDeleteArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PatientProfile.
   * @param {PatientProfileUpdateArgs} args - Arguments to update one PatientProfile.
   * @example
   * // Update one PatientProfile
   * const patientProfile = await prisma.patientProfile.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PatientProfileUpdateArgs>(args: Prisma.SelectSubset<T, PatientProfileUpdateArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PatientProfiles.
   * @param {PatientProfileDeleteManyArgs} args - Arguments to filter PatientProfiles to delete.
   * @example
   * // Delete a few PatientProfiles
   * const { count } = await prisma.patientProfile.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PatientProfileDeleteManyArgs>(args?: Prisma.SelectSubset<T, PatientProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PatientProfiles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PatientProfiles
   * const patientProfile = await prisma.patientProfile.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PatientProfileUpdateManyArgs>(args: Prisma.SelectSubset<T, PatientProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PatientProfiles and returns the data updated in the database.
   * @param {PatientProfileUpdateManyAndReturnArgs} args - Arguments to update many PatientProfiles.
   * @example
   * // Update many PatientProfiles
   * const patientProfile = await prisma.patientProfile.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PatientProfiles and only return the `id`
   * const patientProfileWithIdOnly = await prisma.patientProfile.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PatientProfileUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PatientProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PatientProfile.
   * @param {PatientProfileUpsertArgs} args - Arguments to update or create a PatientProfile.
   * @example
   * // Update or create a PatientProfile
   * const patientProfile = await prisma.patientProfile.upsert({
   *   create: {
   *     // ... data to create a PatientProfile
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PatientProfile we want to update
   *   }
   * })
   */
  upsert<T extends PatientProfileUpsertArgs>(args: Prisma.SelectSubset<T, PatientProfileUpsertArgs<ExtArgs>>): Prisma.Prisma__PatientProfileClient<runtime.Types.Result.GetResult<Prisma.$PatientProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PatientProfiles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileCountArgs} args - Arguments to filter PatientProfiles to count.
   * @example
   * // Count the number of PatientProfiles
   * const count = await prisma.patientProfile.count({
   *   where: {
   *     // ... the filter for the PatientProfiles we want to count
   *   }
   * })
  **/
  count<T extends PatientProfileCountArgs>(
    args?: Prisma.Subset<T, PatientProfileCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PatientProfileCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PatientProfile.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PatientProfileAggregateArgs>(args: Prisma.Subset<T, PatientProfileAggregateArgs>): Prisma.PrismaPromise<GetPatientProfileAggregateType<T>>

  /**
   * Group by PatientProfile.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PatientProfileGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PatientProfileGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PatientProfileGroupByArgs['orderBy'] }
      : { orderBy?: PatientProfileGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PatientProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatientProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PatientProfile model
 */
readonly fields: PatientProfileFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PatientProfile.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PatientProfileClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  patientEncounters<T extends Prisma.PatientProfile$patientEncountersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$patientEncountersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PatientEncounterPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  inpatientEncounters<T extends Prisma.PatientProfile$inpatientEncountersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$inpatientEncountersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InpatientEncounterPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  outpatientEncounters<T extends Prisma.PatientProfile$outpatientEncountersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$outpatientEncountersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OutpatientEncounterPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  appointments<T extends Prisma.PatientProfile$appointmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$appointmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AppointmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  patientAppointments<T extends Prisma.PatientProfile$patientAppointmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$patientAppointmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PatientAppointmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  addresses<T extends Prisma.PatientProfile$addressesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  contacts<T extends Prisma.PatientProfile$contactsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  employments<T extends Prisma.PatientProfile$employmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$employmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmploymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  emergencyContacts<T extends Prisma.PatientProfile$emergencyContactsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$emergencyContactsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmergencyContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  medicalRecordRequests<T extends Prisma.PatientProfile$medicalRecordRequestsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$medicalRecordRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MedicalRecordRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  consent<T extends Prisma.PatientProfile$consentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PatientProfile$consentArgs<ExtArgs>>): Prisma.Prisma__ConsentClient<runtime.Types.Result.GetResult<Prisma.$ConsentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PatientProfile model
 */
export interface PatientProfileFieldRefs {
  readonly id: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly lastName: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly firstName: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly middleName: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly suffix: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly birthdate: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly birthplace: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly sex: Prisma.FieldRef<"PatientProfile", 'Sex'>
  readonly maritalStatus: Prisma.FieldRef<"PatientProfile", 'MaritalStatus'>
  readonly nationality: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly religion: Prisma.FieldRef<"PatientProfile", 'String'>
  readonly bloodType: Prisma.FieldRef<"PatientProfile", 'BloodType'>
  readonly archived: Prisma.FieldRef<"PatientProfile", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"PatientProfile", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"PatientProfile", 'DateTime'>
}
    

// Custom InputTypes
/**
 * PatientProfile findUnique
 */
export type PatientProfileFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * Filter, which PatientProfile to fetch.
   */
  where: Prisma.PatientProfileWhereUniqueInput
}

/**
 * PatientProfile findUniqueOrThrow
 */
export type PatientProfileFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * Filter, which PatientProfile to fetch.
   */
  where: Prisma.PatientProfileWhereUniqueInput
}

/**
 * PatientProfile findFirst
 */
export type PatientProfileFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * Filter, which PatientProfile to fetch.
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PatientProfiles to fetch.
   */
  orderBy?: Prisma.PatientProfileOrderByWithRelationInput | Prisma.PatientProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PatientProfiles.
   */
  cursor?: Prisma.PatientProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PatientProfiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PatientProfiles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PatientProfiles.
   */
  distinct?: Prisma.PatientProfileScalarFieldEnum | Prisma.PatientProfileScalarFieldEnum[]
}

/**
 * PatientProfile findFirstOrThrow
 */
export type PatientProfileFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * Filter, which PatientProfile to fetch.
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PatientProfiles to fetch.
   */
  orderBy?: Prisma.PatientProfileOrderByWithRelationInput | Prisma.PatientProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PatientProfiles.
   */
  cursor?: Prisma.PatientProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PatientProfiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PatientProfiles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PatientProfiles.
   */
  distinct?: Prisma.PatientProfileScalarFieldEnum | Prisma.PatientProfileScalarFieldEnum[]
}

/**
 * PatientProfile findMany
 */
export type PatientProfileFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * Filter, which PatientProfiles to fetch.
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PatientProfiles to fetch.
   */
  orderBy?: Prisma.PatientProfileOrderByWithRelationInput | Prisma.PatientProfileOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PatientProfiles.
   */
  cursor?: Prisma.PatientProfileWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PatientProfiles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PatientProfiles.
   */
  skip?: number
  distinct?: Prisma.PatientProfileScalarFieldEnum | Prisma.PatientProfileScalarFieldEnum[]
}

/**
 * PatientProfile create
 */
export type PatientProfileCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * The data needed to create a PatientProfile.
   */
  data: Prisma.XOR<Prisma.PatientProfileCreateInput, Prisma.PatientProfileUncheckedCreateInput>
}

/**
 * PatientProfile createMany
 */
export type PatientProfileCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PatientProfiles.
   */
  data: Prisma.PatientProfileCreateManyInput | Prisma.PatientProfileCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PatientProfile createManyAndReturn
 */
export type PatientProfileCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * The data used to create many PatientProfiles.
   */
  data: Prisma.PatientProfileCreateManyInput | Prisma.PatientProfileCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PatientProfile update
 */
export type PatientProfileUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * The data needed to update a PatientProfile.
   */
  data: Prisma.XOR<Prisma.PatientProfileUpdateInput, Prisma.PatientProfileUncheckedUpdateInput>
  /**
   * Choose, which PatientProfile to update.
   */
  where: Prisma.PatientProfileWhereUniqueInput
}

/**
 * PatientProfile updateMany
 */
export type PatientProfileUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PatientProfiles.
   */
  data: Prisma.XOR<Prisma.PatientProfileUpdateManyMutationInput, Prisma.PatientProfileUncheckedUpdateManyInput>
  /**
   * Filter which PatientProfiles to update
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * Limit how many PatientProfiles to update.
   */
  limit?: number
}

/**
 * PatientProfile updateManyAndReturn
 */
export type PatientProfileUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * The data used to update PatientProfiles.
   */
  data: Prisma.XOR<Prisma.PatientProfileUpdateManyMutationInput, Prisma.PatientProfileUncheckedUpdateManyInput>
  /**
   * Filter which PatientProfiles to update
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * Limit how many PatientProfiles to update.
   */
  limit?: number
}

/**
 * PatientProfile upsert
 */
export type PatientProfileUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * The filter to search for the PatientProfile to update in case it exists.
   */
  where: Prisma.PatientProfileWhereUniqueInput
  /**
   * In case the PatientProfile found by the `where` argument doesn't exist, create a new PatientProfile with this data.
   */
  create: Prisma.XOR<Prisma.PatientProfileCreateInput, Prisma.PatientProfileUncheckedCreateInput>
  /**
   * In case the PatientProfile was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PatientProfileUpdateInput, Prisma.PatientProfileUncheckedUpdateInput>
}

/**
 * PatientProfile delete
 */
export type PatientProfileDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
  /**
   * Filter which PatientProfile to delete.
   */
  where: Prisma.PatientProfileWhereUniqueInput
}

/**
 * PatientProfile deleteMany
 */
export type PatientProfileDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PatientProfiles to delete
   */
  where?: Prisma.PatientProfileWhereInput
  /**
   * Limit how many PatientProfiles to delete.
   */
  limit?: number
}

/**
 * PatientProfile.patientEncounters
 */
export type PatientProfile$patientEncountersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientEncounter
   */
  select?: Prisma.PatientEncounterSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientEncounter
   */
  omit?: Prisma.PatientEncounterOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientEncounterInclude<ExtArgs> | null
  where?: Prisma.PatientEncounterWhereInput
  orderBy?: Prisma.PatientEncounterOrderByWithRelationInput | Prisma.PatientEncounterOrderByWithRelationInput[]
  cursor?: Prisma.PatientEncounterWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PatientEncounterScalarFieldEnum | Prisma.PatientEncounterScalarFieldEnum[]
}

/**
 * PatientProfile.inpatientEncounters
 */
export type PatientProfile$inpatientEncountersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InpatientEncounter
   */
  select?: Prisma.InpatientEncounterSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InpatientEncounter
   */
  omit?: Prisma.InpatientEncounterOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InpatientEncounterInclude<ExtArgs> | null
  where?: Prisma.InpatientEncounterWhereInput
  orderBy?: Prisma.InpatientEncounterOrderByWithRelationInput | Prisma.InpatientEncounterOrderByWithRelationInput[]
  cursor?: Prisma.InpatientEncounterWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InpatientEncounterScalarFieldEnum | Prisma.InpatientEncounterScalarFieldEnum[]
}

/**
 * PatientProfile.outpatientEncounters
 */
export type PatientProfile$outpatientEncountersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OutpatientEncounter
   */
  select?: Prisma.OutpatientEncounterSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OutpatientEncounter
   */
  omit?: Prisma.OutpatientEncounterOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OutpatientEncounterInclude<ExtArgs> | null
  where?: Prisma.OutpatientEncounterWhereInput
  orderBy?: Prisma.OutpatientEncounterOrderByWithRelationInput | Prisma.OutpatientEncounterOrderByWithRelationInput[]
  cursor?: Prisma.OutpatientEncounterWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OutpatientEncounterScalarFieldEnum | Prisma.OutpatientEncounterScalarFieldEnum[]
}

/**
 * PatientProfile.appointments
 */
export type PatientProfile$appointmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Appointment
   */
  select?: Prisma.AppointmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Appointment
   */
  omit?: Prisma.AppointmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppointmentInclude<ExtArgs> | null
  where?: Prisma.AppointmentWhereInput
  orderBy?: Prisma.AppointmentOrderByWithRelationInput | Prisma.AppointmentOrderByWithRelationInput[]
  cursor?: Prisma.AppointmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AppointmentScalarFieldEnum | Prisma.AppointmentScalarFieldEnum[]
}

/**
 * PatientProfile.patientAppointments
 */
export type PatientProfile$patientAppointmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientAppointment
   */
  select?: Prisma.PatientAppointmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientAppointment
   */
  omit?: Prisma.PatientAppointmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientAppointmentInclude<ExtArgs> | null
  where?: Prisma.PatientAppointmentWhereInput
  orderBy?: Prisma.PatientAppointmentOrderByWithRelationInput | Prisma.PatientAppointmentOrderByWithRelationInput[]
  cursor?: Prisma.PatientAppointmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PatientAppointmentScalarFieldEnum | Prisma.PatientAppointmentScalarFieldEnum[]
}

/**
 * PatientProfile.addresses
 */
export type PatientProfile$addressesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  where?: Prisma.AddressWhereInput
  orderBy?: Prisma.AddressOrderByWithRelationInput | Prisma.AddressOrderByWithRelationInput[]
  cursor?: Prisma.AddressWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AddressScalarFieldEnum | Prisma.AddressScalarFieldEnum[]
}

/**
 * PatientProfile.contacts
 */
export type PatientProfile$contactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Contact
   */
  select?: Prisma.ContactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Contact
   */
  omit?: Prisma.ContactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContactInclude<ExtArgs> | null
  where?: Prisma.ContactWhereInput
  orderBy?: Prisma.ContactOrderByWithRelationInput | Prisma.ContactOrderByWithRelationInput[]
  cursor?: Prisma.ContactWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ContactScalarFieldEnum | Prisma.ContactScalarFieldEnum[]
}

/**
 * PatientProfile.employments
 */
export type PatientProfile$employmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Employment
   */
  select?: Prisma.EmploymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Employment
   */
  omit?: Prisma.EmploymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmploymentInclude<ExtArgs> | null
  where?: Prisma.EmploymentWhereInput
  orderBy?: Prisma.EmploymentOrderByWithRelationInput | Prisma.EmploymentOrderByWithRelationInput[]
  cursor?: Prisma.EmploymentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmploymentScalarFieldEnum | Prisma.EmploymentScalarFieldEnum[]
}

/**
 * PatientProfile.emergencyContacts
 */
export type PatientProfile$emergencyContactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EmergencyContact
   */
  select?: Prisma.EmergencyContactSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EmergencyContact
   */
  omit?: Prisma.EmergencyContactOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmergencyContactInclude<ExtArgs> | null
  where?: Prisma.EmergencyContactWhereInput
  orderBy?: Prisma.EmergencyContactOrderByWithRelationInput | Prisma.EmergencyContactOrderByWithRelationInput[]
  cursor?: Prisma.EmergencyContactWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmergencyContactScalarFieldEnum | Prisma.EmergencyContactScalarFieldEnum[]
}

/**
 * PatientProfile.medicalRecordRequests
 */
export type PatientProfile$medicalRecordRequestsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MedicalRecordRequest
   */
  select?: Prisma.MedicalRecordRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MedicalRecordRequest
   */
  omit?: Prisma.MedicalRecordRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MedicalRecordRequestInclude<ExtArgs> | null
  where?: Prisma.MedicalRecordRequestWhereInput
  orderBy?: Prisma.MedicalRecordRequestOrderByWithRelationInput | Prisma.MedicalRecordRequestOrderByWithRelationInput[]
  cursor?: Prisma.MedicalRecordRequestWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MedicalRecordRequestScalarFieldEnum | Prisma.MedicalRecordRequestScalarFieldEnum[]
}

/**
 * PatientProfile.consent
 */
export type PatientProfile$consentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consent
   */
  select?: Prisma.ConsentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consent
   */
  omit?: Prisma.ConsentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsentInclude<ExtArgs> | null
  where?: Prisma.ConsentWhereInput
}

/**
 * PatientProfile without action
 */
export type PatientProfileDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PatientProfile
   */
  select?: Prisma.PatientProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PatientProfile
   */
  omit?: Prisma.PatientProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PatientProfileInclude<ExtArgs> | null
}
