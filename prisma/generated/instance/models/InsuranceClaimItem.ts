
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `InsuranceClaimItem` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model InsuranceClaimItem
 * 
 */
export type InsuranceClaimItemModel = runtime.Types.Result.DefaultSelection<Prisma.$InsuranceClaimItemPayload>

export type AggregateInsuranceClaimItem = {
  _count: InsuranceClaimItemCountAggregateOutputType | null
  _avg: InsuranceClaimItemAvgAggregateOutputType | null
  _sum: InsuranceClaimItemSumAggregateOutputType | null
  _min: InsuranceClaimItemMinAggregateOutputType | null
  _max: InsuranceClaimItemMaxAggregateOutputType | null
}

export type InsuranceClaimItemAvgAggregateOutputType = {
  amount: number | null
}

export type InsuranceClaimItemSumAggregateOutputType = {
  amount: number | null
}

export type InsuranceClaimItemMinAggregateOutputType = {
  id: string | null
  claimId: string | null
  name: string | null
  description: string | null
  amount: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InsuranceClaimItemMaxAggregateOutputType = {
  id: string | null
  claimId: string | null
  name: string | null
  description: string | null
  amount: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InsuranceClaimItemCountAggregateOutputType = {
  id: number
  claimId: number
  name: number
  description: number
  amount: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type InsuranceClaimItemAvgAggregateInputType = {
  amount?: true
}

export type InsuranceClaimItemSumAggregateInputType = {
  amount?: true
}

export type InsuranceClaimItemMinAggregateInputType = {
  id?: true
  claimId?: true
  name?: true
  description?: true
  amount?: true
  createdAt?: true
  updatedAt?: true
}

export type InsuranceClaimItemMaxAggregateInputType = {
  id?: true
  claimId?: true
  name?: true
  description?: true
  amount?: true
  createdAt?: true
  updatedAt?: true
}

export type InsuranceClaimItemCountAggregateInputType = {
  id?: true
  claimId?: true
  name?: true
  description?: true
  amount?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type InsuranceClaimItemAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InsuranceClaimItem to aggregate.
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InsuranceClaimItems to fetch.
   */
  orderBy?: Prisma.InsuranceClaimItemOrderByWithRelationInput | Prisma.InsuranceClaimItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.InsuranceClaimItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InsuranceClaimItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InsuranceClaimItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned InsuranceClaimItems
  **/
  _count?: true | InsuranceClaimItemCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: InsuranceClaimItemAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: InsuranceClaimItemSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: InsuranceClaimItemMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: InsuranceClaimItemMaxAggregateInputType
}

export type GetInsuranceClaimItemAggregateType<T extends InsuranceClaimItemAggregateArgs> = {
      [P in keyof T & keyof AggregateInsuranceClaimItem]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInsuranceClaimItem[P]>
    : Prisma.GetScalarType<T[P], AggregateInsuranceClaimItem[P]>
}




export type InsuranceClaimItemGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InsuranceClaimItemWhereInput
  orderBy?: Prisma.InsuranceClaimItemOrderByWithAggregationInput | Prisma.InsuranceClaimItemOrderByWithAggregationInput[]
  by: Prisma.InsuranceClaimItemScalarFieldEnum[] | Prisma.InsuranceClaimItemScalarFieldEnum
  having?: Prisma.InsuranceClaimItemScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: InsuranceClaimItemCountAggregateInputType | true
  _avg?: InsuranceClaimItemAvgAggregateInputType
  _sum?: InsuranceClaimItemSumAggregateInputType
  _min?: InsuranceClaimItemMinAggregateInputType
  _max?: InsuranceClaimItemMaxAggregateInputType
}

export type InsuranceClaimItemGroupByOutputType = {
  id: string
  claimId: string
  name: string
  description: string | null
  amount: number
  createdAt: Date
  updatedAt: Date
  _count: InsuranceClaimItemCountAggregateOutputType | null
  _avg: InsuranceClaimItemAvgAggregateOutputType | null
  _sum: InsuranceClaimItemSumAggregateOutputType | null
  _min: InsuranceClaimItemMinAggregateOutputType | null
  _max: InsuranceClaimItemMaxAggregateOutputType | null
}

type GetInsuranceClaimItemGroupByPayload<T extends InsuranceClaimItemGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InsuranceClaimItemGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof InsuranceClaimItemGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], InsuranceClaimItemGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], InsuranceClaimItemGroupByOutputType[P]>
      }
    >
  > 



export type InsuranceClaimItemWhereInput = {
  AND?: Prisma.InsuranceClaimItemWhereInput | Prisma.InsuranceClaimItemWhereInput[]
  OR?: Prisma.InsuranceClaimItemWhereInput[]
  NOT?: Prisma.InsuranceClaimItemWhereInput | Prisma.InsuranceClaimItemWhereInput[]
  id?: Prisma.UuidFilter<"InsuranceClaimItem"> | string
  claimId?: Prisma.UuidFilter<"InsuranceClaimItem"> | string
  name?: Prisma.StringFilter<"InsuranceClaimItem"> | string
  description?: Prisma.StringNullableFilter<"InsuranceClaimItem"> | string | null
  amount?: Prisma.IntFilter<"InsuranceClaimItem"> | number
  createdAt?: Prisma.DateTimeFilter<"InsuranceClaimItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"InsuranceClaimItem"> | Date | string
  claim?: Prisma.XOR<Prisma.InsuranceClaimScalarRelationFilter, Prisma.InsuranceClaimWhereInput>
}

export type InsuranceClaimItemOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  claimId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  amount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  claim?: Prisma.InsuranceClaimOrderByWithRelationInput
}

export type InsuranceClaimItemWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.InsuranceClaimItemWhereInput | Prisma.InsuranceClaimItemWhereInput[]
  OR?: Prisma.InsuranceClaimItemWhereInput[]
  NOT?: Prisma.InsuranceClaimItemWhereInput | Prisma.InsuranceClaimItemWhereInput[]
  claimId?: Prisma.UuidFilter<"InsuranceClaimItem"> | string
  name?: Prisma.StringFilter<"InsuranceClaimItem"> | string
  description?: Prisma.StringNullableFilter<"InsuranceClaimItem"> | string | null
  amount?: Prisma.IntFilter<"InsuranceClaimItem"> | number
  createdAt?: Prisma.DateTimeFilter<"InsuranceClaimItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"InsuranceClaimItem"> | Date | string
  claim?: Prisma.XOR<Prisma.InsuranceClaimScalarRelationFilter, Prisma.InsuranceClaimWhereInput>
}, "id">

export type InsuranceClaimItemOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  claimId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  amount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.InsuranceClaimItemCountOrderByAggregateInput
  _avg?: Prisma.InsuranceClaimItemAvgOrderByAggregateInput
  _max?: Prisma.InsuranceClaimItemMaxOrderByAggregateInput
  _min?: Prisma.InsuranceClaimItemMinOrderByAggregateInput
  _sum?: Prisma.InsuranceClaimItemSumOrderByAggregateInput
}

export type InsuranceClaimItemScalarWhereWithAggregatesInput = {
  AND?: Prisma.InsuranceClaimItemScalarWhereWithAggregatesInput | Prisma.InsuranceClaimItemScalarWhereWithAggregatesInput[]
  OR?: Prisma.InsuranceClaimItemScalarWhereWithAggregatesInput[]
  NOT?: Prisma.InsuranceClaimItemScalarWhereWithAggregatesInput | Prisma.InsuranceClaimItemScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"InsuranceClaimItem"> | string
  claimId?: Prisma.UuidWithAggregatesFilter<"InsuranceClaimItem"> | string
  name?: Prisma.StringWithAggregatesFilter<"InsuranceClaimItem"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"InsuranceClaimItem"> | string | null
  amount?: Prisma.IntWithAggregatesFilter<"InsuranceClaimItem"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"InsuranceClaimItem"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"InsuranceClaimItem"> | Date | string
}

export type InsuranceClaimItemCreateInput = {
  id?: string
  name: string
  description?: string | null
  amount: number
  createdAt?: Date | string
  updatedAt?: Date | string
  claim: Prisma.InsuranceClaimCreateNestedOneWithoutItemsInput
}

export type InsuranceClaimItemUncheckedCreateInput = {
  id?: string
  claimId: string
  name: string
  description?: string | null
  amount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InsuranceClaimItemUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  claim?: Prisma.InsuranceClaimUpdateOneRequiredWithoutItemsNestedInput
}

export type InsuranceClaimItemUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  claimId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InsuranceClaimItemCreateManyInput = {
  id?: string
  claimId: string
  name: string
  description?: string | null
  amount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InsuranceClaimItemUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InsuranceClaimItemUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  claimId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InsuranceClaimItemListRelationFilter = {
  every?: Prisma.InsuranceClaimItemWhereInput
  some?: Prisma.InsuranceClaimItemWhereInput
  none?: Prisma.InsuranceClaimItemWhereInput
}

export type InsuranceClaimItemOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type InsuranceClaimItemCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  claimId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InsuranceClaimItemAvgOrderByAggregateInput = {
  amount?: Prisma.SortOrder
}

export type InsuranceClaimItemMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  claimId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InsuranceClaimItemMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  claimId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InsuranceClaimItemSumOrderByAggregateInput = {
  amount?: Prisma.SortOrder
}

export type InsuranceClaimItemCreateNestedManyWithoutClaimInput = {
  create?: Prisma.XOR<Prisma.InsuranceClaimItemCreateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput> | Prisma.InsuranceClaimItemCreateWithoutClaimInput[] | Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput[]
  connectOrCreate?: Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput | Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput[]
  createMany?: Prisma.InsuranceClaimItemCreateManyClaimInputEnvelope
  connect?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
}

export type InsuranceClaimItemUncheckedCreateNestedManyWithoutClaimInput = {
  create?: Prisma.XOR<Prisma.InsuranceClaimItemCreateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput> | Prisma.InsuranceClaimItemCreateWithoutClaimInput[] | Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput[]
  connectOrCreate?: Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput | Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput[]
  createMany?: Prisma.InsuranceClaimItemCreateManyClaimInputEnvelope
  connect?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
}

export type InsuranceClaimItemUpdateManyWithoutClaimNestedInput = {
  create?: Prisma.XOR<Prisma.InsuranceClaimItemCreateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput> | Prisma.InsuranceClaimItemCreateWithoutClaimInput[] | Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput[]
  connectOrCreate?: Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput | Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput[]
  upsert?: Prisma.InsuranceClaimItemUpsertWithWhereUniqueWithoutClaimInput | Prisma.InsuranceClaimItemUpsertWithWhereUniqueWithoutClaimInput[]
  createMany?: Prisma.InsuranceClaimItemCreateManyClaimInputEnvelope
  set?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  disconnect?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  delete?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  connect?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  update?: Prisma.InsuranceClaimItemUpdateWithWhereUniqueWithoutClaimInput | Prisma.InsuranceClaimItemUpdateWithWhereUniqueWithoutClaimInput[]
  updateMany?: Prisma.InsuranceClaimItemUpdateManyWithWhereWithoutClaimInput | Prisma.InsuranceClaimItemUpdateManyWithWhereWithoutClaimInput[]
  deleteMany?: Prisma.InsuranceClaimItemScalarWhereInput | Prisma.InsuranceClaimItemScalarWhereInput[]
}

export type InsuranceClaimItemUncheckedUpdateManyWithoutClaimNestedInput = {
  create?: Prisma.XOR<Prisma.InsuranceClaimItemCreateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput> | Prisma.InsuranceClaimItemCreateWithoutClaimInput[] | Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput[]
  connectOrCreate?: Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput | Prisma.InsuranceClaimItemCreateOrConnectWithoutClaimInput[]
  upsert?: Prisma.InsuranceClaimItemUpsertWithWhereUniqueWithoutClaimInput | Prisma.InsuranceClaimItemUpsertWithWhereUniqueWithoutClaimInput[]
  createMany?: Prisma.InsuranceClaimItemCreateManyClaimInputEnvelope
  set?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  disconnect?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  delete?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  connect?: Prisma.InsuranceClaimItemWhereUniqueInput | Prisma.InsuranceClaimItemWhereUniqueInput[]
  update?: Prisma.InsuranceClaimItemUpdateWithWhereUniqueWithoutClaimInput | Prisma.InsuranceClaimItemUpdateWithWhereUniqueWithoutClaimInput[]
  updateMany?: Prisma.InsuranceClaimItemUpdateManyWithWhereWithoutClaimInput | Prisma.InsuranceClaimItemUpdateManyWithWhereWithoutClaimInput[]
  deleteMany?: Prisma.InsuranceClaimItemScalarWhereInput | Prisma.InsuranceClaimItemScalarWhereInput[]
}

export type InsuranceClaimItemCreateWithoutClaimInput = {
  id?: string
  name: string
  description?: string | null
  amount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InsuranceClaimItemUncheckedCreateWithoutClaimInput = {
  id?: string
  name: string
  description?: string | null
  amount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InsuranceClaimItemCreateOrConnectWithoutClaimInput = {
  where: Prisma.InsuranceClaimItemWhereUniqueInput
  create: Prisma.XOR<Prisma.InsuranceClaimItemCreateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput>
}

export type InsuranceClaimItemCreateManyClaimInputEnvelope = {
  data: Prisma.InsuranceClaimItemCreateManyClaimInput | Prisma.InsuranceClaimItemCreateManyClaimInput[]
  skipDuplicates?: boolean
}

export type InsuranceClaimItemUpsertWithWhereUniqueWithoutClaimInput = {
  where: Prisma.InsuranceClaimItemWhereUniqueInput
  update: Prisma.XOR<Prisma.InsuranceClaimItemUpdateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedUpdateWithoutClaimInput>
  create: Prisma.XOR<Prisma.InsuranceClaimItemCreateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedCreateWithoutClaimInput>
}

export type InsuranceClaimItemUpdateWithWhereUniqueWithoutClaimInput = {
  where: Prisma.InsuranceClaimItemWhereUniqueInput
  data: Prisma.XOR<Prisma.InsuranceClaimItemUpdateWithoutClaimInput, Prisma.InsuranceClaimItemUncheckedUpdateWithoutClaimInput>
}

export type InsuranceClaimItemUpdateManyWithWhereWithoutClaimInput = {
  where: Prisma.InsuranceClaimItemScalarWhereInput
  data: Prisma.XOR<Prisma.InsuranceClaimItemUpdateManyMutationInput, Prisma.InsuranceClaimItemUncheckedUpdateManyWithoutClaimInput>
}

export type InsuranceClaimItemScalarWhereInput = {
  AND?: Prisma.InsuranceClaimItemScalarWhereInput | Prisma.InsuranceClaimItemScalarWhereInput[]
  OR?: Prisma.InsuranceClaimItemScalarWhereInput[]
  NOT?: Prisma.InsuranceClaimItemScalarWhereInput | Prisma.InsuranceClaimItemScalarWhereInput[]
  id?: Prisma.UuidFilter<"InsuranceClaimItem"> | string
  claimId?: Prisma.UuidFilter<"InsuranceClaimItem"> | string
  name?: Prisma.StringFilter<"InsuranceClaimItem"> | string
  description?: Prisma.StringNullableFilter<"InsuranceClaimItem"> | string | null
  amount?: Prisma.IntFilter<"InsuranceClaimItem"> | number
  createdAt?: Prisma.DateTimeFilter<"InsuranceClaimItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"InsuranceClaimItem"> | Date | string
}

export type InsuranceClaimItemCreateManyClaimInput = {
  id?: string
  name: string
  description?: string | null
  amount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InsuranceClaimItemUpdateWithoutClaimInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InsuranceClaimItemUncheckedUpdateWithoutClaimInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InsuranceClaimItemUncheckedUpdateManyWithoutClaimInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type InsuranceClaimItemSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  claimId?: boolean
  name?: boolean
  description?: boolean
  amount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  claim?: boolean | Prisma.InsuranceClaimDefaultArgs<ExtArgs>
}, ExtArgs["result"]["insuranceClaimItem"]>

export type InsuranceClaimItemSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  claimId?: boolean
  name?: boolean
  description?: boolean
  amount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  claim?: boolean | Prisma.InsuranceClaimDefaultArgs<ExtArgs>
}, ExtArgs["result"]["insuranceClaimItem"]>

export type InsuranceClaimItemSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  claimId?: boolean
  name?: boolean
  description?: boolean
  amount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  claim?: boolean | Prisma.InsuranceClaimDefaultArgs<ExtArgs>
}, ExtArgs["result"]["insuranceClaimItem"]>

export type InsuranceClaimItemSelectScalar = {
  id?: boolean
  claimId?: boolean
  name?: boolean
  description?: boolean
  amount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type InsuranceClaimItemOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "claimId" | "name" | "description" | "amount" | "createdAt" | "updatedAt", ExtArgs["result"]["insuranceClaimItem"]>
export type InsuranceClaimItemInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  claim?: boolean | Prisma.InsuranceClaimDefaultArgs<ExtArgs>
}
export type InsuranceClaimItemIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  claim?: boolean | Prisma.InsuranceClaimDefaultArgs<ExtArgs>
}
export type InsuranceClaimItemIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  claim?: boolean | Prisma.InsuranceClaimDefaultArgs<ExtArgs>
}

export type $InsuranceClaimItemPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "InsuranceClaimItem"
  objects: {
    claim: Prisma.$InsuranceClaimPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    claimId: string
    name: string
    description: string | null
    amount: number
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["insuranceClaimItem"]>
  composites: {}
}

export type InsuranceClaimItemGetPayload<S extends boolean | null | undefined | InsuranceClaimItemDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload, S>

export type InsuranceClaimItemCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<InsuranceClaimItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: InsuranceClaimItemCountAggregateInputType | true
  }

export interface InsuranceClaimItemDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InsuranceClaimItem'], meta: { name: 'InsuranceClaimItem' } }
  /**
   * Find zero or one InsuranceClaimItem that matches the filter.
   * @param {InsuranceClaimItemFindUniqueArgs} args - Arguments to find a InsuranceClaimItem
   * @example
   * // Get one InsuranceClaimItem
   * const insuranceClaimItem = await prisma.insuranceClaimItem.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InsuranceClaimItemFindUniqueArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemFindUniqueArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one InsuranceClaimItem that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InsuranceClaimItemFindUniqueOrThrowArgs} args - Arguments to find a InsuranceClaimItem
   * @example
   * // Get one InsuranceClaimItem
   * const insuranceClaimItem = await prisma.insuranceClaimItem.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InsuranceClaimItemFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InsuranceClaimItem that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemFindFirstArgs} args - Arguments to find a InsuranceClaimItem
   * @example
   * // Get one InsuranceClaimItem
   * const insuranceClaimItem = await prisma.insuranceClaimItem.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InsuranceClaimItemFindFirstArgs>(args?: Prisma.SelectSubset<T, InsuranceClaimItemFindFirstArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InsuranceClaimItem that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemFindFirstOrThrowArgs} args - Arguments to find a InsuranceClaimItem
   * @example
   * // Get one InsuranceClaimItem
   * const insuranceClaimItem = await prisma.insuranceClaimItem.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InsuranceClaimItemFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, InsuranceClaimItemFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more InsuranceClaimItems that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InsuranceClaimItems
   * const insuranceClaimItems = await prisma.insuranceClaimItem.findMany()
   * 
   * // Get first 10 InsuranceClaimItems
   * const insuranceClaimItems = await prisma.insuranceClaimItem.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const insuranceClaimItemWithIdOnly = await prisma.insuranceClaimItem.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends InsuranceClaimItemFindManyArgs>(args?: Prisma.SelectSubset<T, InsuranceClaimItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a InsuranceClaimItem.
   * @param {InsuranceClaimItemCreateArgs} args - Arguments to create a InsuranceClaimItem.
   * @example
   * // Create one InsuranceClaimItem
   * const InsuranceClaimItem = await prisma.insuranceClaimItem.create({
   *   data: {
   *     // ... data to create a InsuranceClaimItem
   *   }
   * })
   * 
   */
  create<T extends InsuranceClaimItemCreateArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemCreateArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many InsuranceClaimItems.
   * @param {InsuranceClaimItemCreateManyArgs} args - Arguments to create many InsuranceClaimItems.
   * @example
   * // Create many InsuranceClaimItems
   * const insuranceClaimItem = await prisma.insuranceClaimItem.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends InsuranceClaimItemCreateManyArgs>(args?: Prisma.SelectSubset<T, InsuranceClaimItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many InsuranceClaimItems and returns the data saved in the database.
   * @param {InsuranceClaimItemCreateManyAndReturnArgs} args - Arguments to create many InsuranceClaimItems.
   * @example
   * // Create many InsuranceClaimItems
   * const insuranceClaimItem = await prisma.insuranceClaimItem.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many InsuranceClaimItems and only return the `id`
   * const insuranceClaimItemWithIdOnly = await prisma.insuranceClaimItem.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends InsuranceClaimItemCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, InsuranceClaimItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a InsuranceClaimItem.
   * @param {InsuranceClaimItemDeleteArgs} args - Arguments to delete one InsuranceClaimItem.
   * @example
   * // Delete one InsuranceClaimItem
   * const InsuranceClaimItem = await prisma.insuranceClaimItem.delete({
   *   where: {
   *     // ... filter to delete one InsuranceClaimItem
   *   }
   * })
   * 
   */
  delete<T extends InsuranceClaimItemDeleteArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemDeleteArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one InsuranceClaimItem.
   * @param {InsuranceClaimItemUpdateArgs} args - Arguments to update one InsuranceClaimItem.
   * @example
   * // Update one InsuranceClaimItem
   * const insuranceClaimItem = await prisma.insuranceClaimItem.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends InsuranceClaimItemUpdateArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemUpdateArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more InsuranceClaimItems.
   * @param {InsuranceClaimItemDeleteManyArgs} args - Arguments to filter InsuranceClaimItems to delete.
   * @example
   * // Delete a few InsuranceClaimItems
   * const { count } = await prisma.insuranceClaimItem.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends InsuranceClaimItemDeleteManyArgs>(args?: Prisma.SelectSubset<T, InsuranceClaimItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InsuranceClaimItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InsuranceClaimItems
   * const insuranceClaimItem = await prisma.insuranceClaimItem.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends InsuranceClaimItemUpdateManyArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InsuranceClaimItems and returns the data updated in the database.
   * @param {InsuranceClaimItemUpdateManyAndReturnArgs} args - Arguments to update many InsuranceClaimItems.
   * @example
   * // Update many InsuranceClaimItems
   * const insuranceClaimItem = await prisma.insuranceClaimItem.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more InsuranceClaimItems and only return the `id`
   * const insuranceClaimItemWithIdOnly = await prisma.insuranceClaimItem.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends InsuranceClaimItemUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one InsuranceClaimItem.
   * @param {InsuranceClaimItemUpsertArgs} args - Arguments to update or create a InsuranceClaimItem.
   * @example
   * // Update or create a InsuranceClaimItem
   * const insuranceClaimItem = await prisma.insuranceClaimItem.upsert({
   *   create: {
   *     // ... data to create a InsuranceClaimItem
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InsuranceClaimItem we want to update
   *   }
   * })
   */
  upsert<T extends InsuranceClaimItemUpsertArgs>(args: Prisma.SelectSubset<T, InsuranceClaimItemUpsertArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimItemClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of InsuranceClaimItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemCountArgs} args - Arguments to filter InsuranceClaimItems to count.
   * @example
   * // Count the number of InsuranceClaimItems
   * const count = await prisma.insuranceClaimItem.count({
   *   where: {
   *     // ... the filter for the InsuranceClaimItems we want to count
   *   }
   * })
  **/
  count<T extends InsuranceClaimItemCountArgs>(
    args?: Prisma.Subset<T, InsuranceClaimItemCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], InsuranceClaimItemCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a InsuranceClaimItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends InsuranceClaimItemAggregateArgs>(args: Prisma.Subset<T, InsuranceClaimItemAggregateArgs>): Prisma.PrismaPromise<GetInsuranceClaimItemAggregateType<T>>

  /**
   * Group by InsuranceClaimItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InsuranceClaimItemGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends InsuranceClaimItemGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InsuranceClaimItemGroupByArgs['orderBy'] }
      : { orderBy?: InsuranceClaimItemGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, InsuranceClaimItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInsuranceClaimItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the InsuranceClaimItem model
 */
readonly fields: InsuranceClaimItemFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InsuranceClaimItem.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InsuranceClaimItemClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  claim<T extends Prisma.InsuranceClaimDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.InsuranceClaimDefaultArgs<ExtArgs>>): Prisma.Prisma__InsuranceClaimClient<runtime.Types.Result.GetResult<Prisma.$InsuranceClaimPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the InsuranceClaimItem model
 */
export interface InsuranceClaimItemFieldRefs {
  readonly id: Prisma.FieldRef<"InsuranceClaimItem", 'String'>
  readonly claimId: Prisma.FieldRef<"InsuranceClaimItem", 'String'>
  readonly name: Prisma.FieldRef<"InsuranceClaimItem", 'String'>
  readonly description: Prisma.FieldRef<"InsuranceClaimItem", 'String'>
  readonly amount: Prisma.FieldRef<"InsuranceClaimItem", 'Int'>
  readonly createdAt: Prisma.FieldRef<"InsuranceClaimItem", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"InsuranceClaimItem", 'DateTime'>
}
    

// Custom InputTypes
/**
 * InsuranceClaimItem findUnique
 */
export type InsuranceClaimItemFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * Filter, which InsuranceClaimItem to fetch.
   */
  where: Prisma.InsuranceClaimItemWhereUniqueInput
}

/**
 * InsuranceClaimItem findUniqueOrThrow
 */
export type InsuranceClaimItemFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * Filter, which InsuranceClaimItem to fetch.
   */
  where: Prisma.InsuranceClaimItemWhereUniqueInput
}

/**
 * InsuranceClaimItem findFirst
 */
export type InsuranceClaimItemFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * Filter, which InsuranceClaimItem to fetch.
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InsuranceClaimItems to fetch.
   */
  orderBy?: Prisma.InsuranceClaimItemOrderByWithRelationInput | Prisma.InsuranceClaimItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InsuranceClaimItems.
   */
  cursor?: Prisma.InsuranceClaimItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InsuranceClaimItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InsuranceClaimItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InsuranceClaimItems.
   */
  distinct?: Prisma.InsuranceClaimItemScalarFieldEnum | Prisma.InsuranceClaimItemScalarFieldEnum[]
}

/**
 * InsuranceClaimItem findFirstOrThrow
 */
export type InsuranceClaimItemFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * Filter, which InsuranceClaimItem to fetch.
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InsuranceClaimItems to fetch.
   */
  orderBy?: Prisma.InsuranceClaimItemOrderByWithRelationInput | Prisma.InsuranceClaimItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InsuranceClaimItems.
   */
  cursor?: Prisma.InsuranceClaimItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InsuranceClaimItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InsuranceClaimItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InsuranceClaimItems.
   */
  distinct?: Prisma.InsuranceClaimItemScalarFieldEnum | Prisma.InsuranceClaimItemScalarFieldEnum[]
}

/**
 * InsuranceClaimItem findMany
 */
export type InsuranceClaimItemFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * Filter, which InsuranceClaimItems to fetch.
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InsuranceClaimItems to fetch.
   */
  orderBy?: Prisma.InsuranceClaimItemOrderByWithRelationInput | Prisma.InsuranceClaimItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing InsuranceClaimItems.
   */
  cursor?: Prisma.InsuranceClaimItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InsuranceClaimItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InsuranceClaimItems.
   */
  skip?: number
  distinct?: Prisma.InsuranceClaimItemScalarFieldEnum | Prisma.InsuranceClaimItemScalarFieldEnum[]
}

/**
 * InsuranceClaimItem create
 */
export type InsuranceClaimItemCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * The data needed to create a InsuranceClaimItem.
   */
  data: Prisma.XOR<Prisma.InsuranceClaimItemCreateInput, Prisma.InsuranceClaimItemUncheckedCreateInput>
}

/**
 * InsuranceClaimItem createMany
 */
export type InsuranceClaimItemCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many InsuranceClaimItems.
   */
  data: Prisma.InsuranceClaimItemCreateManyInput | Prisma.InsuranceClaimItemCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * InsuranceClaimItem createManyAndReturn
 */
export type InsuranceClaimItemCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * The data used to create many InsuranceClaimItems.
   */
  data: Prisma.InsuranceClaimItemCreateManyInput | Prisma.InsuranceClaimItemCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * InsuranceClaimItem update
 */
export type InsuranceClaimItemUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * The data needed to update a InsuranceClaimItem.
   */
  data: Prisma.XOR<Prisma.InsuranceClaimItemUpdateInput, Prisma.InsuranceClaimItemUncheckedUpdateInput>
  /**
   * Choose, which InsuranceClaimItem to update.
   */
  where: Prisma.InsuranceClaimItemWhereUniqueInput
}

/**
 * InsuranceClaimItem updateMany
 */
export type InsuranceClaimItemUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update InsuranceClaimItems.
   */
  data: Prisma.XOR<Prisma.InsuranceClaimItemUpdateManyMutationInput, Prisma.InsuranceClaimItemUncheckedUpdateManyInput>
  /**
   * Filter which InsuranceClaimItems to update
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * Limit how many InsuranceClaimItems to update.
   */
  limit?: number
}

/**
 * InsuranceClaimItem updateManyAndReturn
 */
export type InsuranceClaimItemUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * The data used to update InsuranceClaimItems.
   */
  data: Prisma.XOR<Prisma.InsuranceClaimItemUpdateManyMutationInput, Prisma.InsuranceClaimItemUncheckedUpdateManyInput>
  /**
   * Filter which InsuranceClaimItems to update
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * Limit how many InsuranceClaimItems to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * InsuranceClaimItem upsert
 */
export type InsuranceClaimItemUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * The filter to search for the InsuranceClaimItem to update in case it exists.
   */
  where: Prisma.InsuranceClaimItemWhereUniqueInput
  /**
   * In case the InsuranceClaimItem found by the `where` argument doesn't exist, create a new InsuranceClaimItem with this data.
   */
  create: Prisma.XOR<Prisma.InsuranceClaimItemCreateInput, Prisma.InsuranceClaimItemUncheckedCreateInput>
  /**
   * In case the InsuranceClaimItem was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InsuranceClaimItemUpdateInput, Prisma.InsuranceClaimItemUncheckedUpdateInput>
}

/**
 * InsuranceClaimItem delete
 */
export type InsuranceClaimItemDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
  /**
   * Filter which InsuranceClaimItem to delete.
   */
  where: Prisma.InsuranceClaimItemWhereUniqueInput
}

/**
 * InsuranceClaimItem deleteMany
 */
export type InsuranceClaimItemDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InsuranceClaimItems to delete
   */
  where?: Prisma.InsuranceClaimItemWhereInput
  /**
   * Limit how many InsuranceClaimItems to delete.
   */
  limit?: number
}

/**
 * InsuranceClaimItem without action
 */
export type InsuranceClaimItemDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InsuranceClaimItem
   */
  select?: Prisma.InsuranceClaimItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InsuranceClaimItem
   */
  omit?: Prisma.InsuranceClaimItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InsuranceClaimItemInclude<ExtArgs> | null
}
