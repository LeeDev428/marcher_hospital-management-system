import { defaultEndpoint } from "./shared-C-gde89n.js";
import { fetchRequestHandler } from "@trpc/server/adapters/fetch";
import { eventHandler, getRequestURL, getRequestWebStream } from "h3";

//#region src/server/toWebRequest.ts
function toWebRequest(event) {
	if ("request" in event) return event.request;
	return toWebRequestOriginal(event);
}
function toWebRequestOriginal(event) {
	return event.web?.request || new Request(getRequestURL(event), {
		duplex: "half",
		method: event.method,
		headers: event.headers,
		body: getRequestWebStream(event)
	});
}

//#endregion
//#region src/server/createTRPCNuxtHandler.ts
function createTRPCNuxtHandler(opts) {
	return eventHandler(async (event) => {
		const createContext = async (fetchCreateContextOptions) => {
			return await opts.createContext?.(event, fetchCreateContextOptions);
		};
		const httpResponse = await fetchRequestHandler({
			...opts,
			endpoint: opts.endpoint || defaultEndpoint,
			router: opts.router,
			req: toWebRequest(event),
			createContext
		});
		if (event.handled) return;
		return httpResponse;
	});
}

//#endregion
//#region src/server/index.ts
/**
* @deprecated Use createTRPCNuxtHandler instead. This will be removed in the next minor version.
*/
const createNuxtApiHandler = createTRPCNuxtHandler;

//#endregion
export { createNuxtApiHandler, createTRPCNuxtHandler };